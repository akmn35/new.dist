[{"path":"https://akmn35.github.io/new.dist/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ramazan Akman. Maintainer.","code":""},{"path":"https://akmn35.github.io/new.dist/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Akman R, Kuş C, Abusaif (2023). new.dist: Alternative continuous discrete Distributions. R package version 0.1.0, https://akmn35.github.io/new.dist/, https://github.com/akmn35/new.dist.","code":"@Manual{,   title = {new.dist: Alternative continuous and discrete Distributions},   author = {Ramazan Akman and Coşkun Kuş and Ihab Abusaif},   year = {2023},   note = {R package version 0.1.0, https://akmn35.github.io/new.dist/},   url = {https://github.com/akmn35/new.dist}, }"},{"path":"https://akmn35.github.io/new.dist/index.html","id":"newdist","dir":"","previous_headings":"","what":"Alternative continuous and discrete Distributions","title":"Alternative continuous and discrete Distributions","text":"aim develop R package, new.dist package, probability (density) function, distribution function, quantile function associated random number generation function discrete continuous distributions, recently proposed literature. package implements following distributions: Power Muth Distribution, bimodal Weibull Distribution, Discrete Lindley Distribution, Gamma-Lomax Distribution, Weighted Geometric Distribution, Power Log-Dagum Distribution, Kumaraswamy Distribution, Lindley Distribution, Unit-Inverse Gaussian Distribution, EP Distribution, Akash Distribution, Ishita Distribution, Maxwell Distribution, Standard Omega Distribution, Slashed Generalized Rayleigh Distribution, Two-Parameter Rayleigh Distribution, Muth Distribution, Uniform-Geometric Distribution, Discrete Weibull Distribution.","code":""},{"path":"https://akmn35.github.io/new.dist/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Alternative continuous and discrete Distributions","text":"can install development version new.dist [GitHub][https://github.com/] :","code":"# install.packages(\"devtools\") devtools::install_github(\"akmn35/new.dist\")"},{"path":"https://akmn35.github.io/new.dist/index.html","id":"details","dir":"","previous_headings":"","what":"Details","title":"Alternative continuous and discrete Distributions","text":"new.dist Density, distribution function, quantile function random generation parameter estimation distributions.","code":""},{"path":"https://akmn35.github.io/new.dist/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Alternative continuous and discrete Distributions","text":"dbwd Density function Bimodal Weibull distribution shape (alpha) scale (beta) parameters. pbwd Distribution function Bimodal Weibull distribution shape (alpha) scale (beta) parameters. qbwd Quantile function Bimodal Weibull distribution shape (alpha) scale (beta) parameters. rbwd Random generation Bimodal Weibull distribution shape (alpha) scale (beta) parameters. dsgrd Density function Slashed Generalized Rayleigh distribution shape (alpha), scale (theta) kurtosis(beta) parameters. psgrd Distribution function Slashed Generalized Rayleigh distribution shape (alpha), scale (theta) kurtosis (beta) parameters. qsgrd Quantile function Slashed Generalized Rayleigh distribution shape (alpha), scale (theta) kurtosis (beta) parameters. rsgrd Random generation Slashed Generalized Rayleigh distribution shape (alpha), scale (theta) kurtosis (beta) parameters. dsod Density function Standard Omega distribution alpha beta parameters. psod Distribution function Standard Omega distribution alpha beta parameters. qsod Quantile function Standard Omega distribution alpha beta parameters. rsod Random generation Standard Omega distribution alpha beta parameters. dugd Density function Uniform-Geometric distribution theta parameter. pugd Distribution function Uniform-Geometric distribution theta parameter. qugd Quantile function Uniform-Geometric distribution theta parameter. rugd Random generation Uniform-Geometric distribution theta parameter. dtpmd Density function Power Muth distribution shape (beta) scale (alpha) parameters. ptpmd Distribution function Power Muth distribution shape (beta) scale (alpha) parameters. qtpmd Quantile function Power Muth distribution shape (beta) scale (alpha) parameters. rtpmd Random generation Power Muth distribution shape (beta) scale (alpha) parameters. dtprd Density function Two-Parameter Rayleigh distribution location (mu) scale (lambda) parameters. ptprd Distribution function Two-Parameter Rayleigh distribution location (mu) scale (lambda) parameters. qtprd Quantile function Two-Parameter Rayleigh distribution location (mu) scale (lambda) parameters. rtprd Random generation Two-Parameter Rayleigh distribution location (mu) scale (lambda) parameters. duigd Density function Unit Inverse Gaussian distribution mean (mu) scale (lambda) parameters. puigd Distribution function Unit Inverse Gaussian distribution mean (mu) scale (lambda) parameters. quigd Quantile function Unit Inverse Gaussian distribution mean (mu) scale (lambda) parameters. ruigd Random generation Unit Inverse Gaussian distribution mean (mu) scale (lambda) parameters. dwgd Density function Weighted Geometric distribution alpha lambda parameters. pwgd Distribution function Weighted Geometric distribution alpha lambda parameters. qwgd Quantile function Weighted Geometric distribution alpha lambda parameters. rwgd Random generation Weighted Geometric distribution alpha lambda parameters. ddld Density function Discrete Lindley distribution theta parameter. pdld Distribution function Discrete Lindley distribution theta parameter. qdld Quantile function Discrete Lindley distribution theta parameter. rdld Random generation Discrete Lindley distribution theta parameter. demd Density function Maxwell distribution scale (theta) parameter. pemd Distribution function Maxwell distribution scale (theta) parameter. qemd Quantile function Maxwell distribution scale (theta) parameter. remd Random generation Maxwell distribution scale (theta) parameter. depkd Density function Kumaraswamy distribution shape (alpha, lambda) parameters. pepkd Distribution function Kumaraswamy distribution shape (alpha, lambda) parameters. qepkd Quantile function Kumaraswamy distribution shape (alpha, lambda) parameters. repkd Random generation Kumaraswamy distribution shape (alpha, lambda) parameters. dgld Density function Gamma-Lomax distribution shape (, alpha) scale (beta) parameters. pgld Distribution function Gamma-Lomax distribution shape (, alpha) scale (beta) parameters. qgld Quantile function Gamma-Lomax distribution shape (, alpha) scale (beta) parameters. rgld Random generation Gamma-Lomax distribution shape (, alpha) scale (beta) parameters. dndd Density function Discrete Lindley distribution theta parameter. pndd Distribution function Discrete Lindley distribution theta parameter. qndd Quantile function Discrete Lindley distribution theta parameter. rndd Random generation Discrete Lindley distribution theta parameter. dEPd Density function EP distribution lambda beta parameters. pEPd Distribution function EP distribution lambda beta parameters. qEPd Quantile function EP distribution lambda beta parameters. rEPd Random generation EP distribution lambda beta parameters. dnoPDD Density function New One Parameter Discrete distribution scale (theta) parameter. pnoPDD Distribution function New One Parameter Discrete distribution scale (theta) parameter. qnoPDD Quantile function New One Parameter Discrete distribution scale (theta) parameter. rnoPDD Random generation New One Parameter Discrete distribution scale (theta) parameter. domd Density function Muth distribution alpha parameter. pomd Distribution function Muth distribution alpha parameter. qomd Quantile function Muth distribution alpha parameter. romd Random generation Muth distribution alpha parameter. dpldd Density function Power Log Dagum distribution alpha, beta theta parameters. ppldd Distribution function Power Log Dagum distribution alpha, beta theta parameters. qpldd Quantile function Power Log Dagum distribution alpha, beta theta parameters. rpldd Random generation Power Log Dagum distribution alpha, beta theta parameters. drld Density function Lindley distribution theta parameter. prld Distribution function Lindley distribution theta parameter. qrld Quantile function Lindley distribution theta parameter. rrld Random generation Lindley distribution theta parameter.","code":"library(new.dist) dbwd(1,alpha=2,beta=3,sigma=4) #> [1] 0.01594262 library(new.dist) pbwd(1,alpha=2,beta=3,sigma=4) #> [1] 0.003859685 library(new.dist) qbwd(.7,alpha=2,beta=3,sigma=4) #> [1] 4.759942 library(new.dist) rbwd(5,alpha=2,beta=3,sigma=4) #> [1] 4.412939 5.527120 5.291194 1.581733 2.891694 library(new.dist) dsgrd(2,theta=3,alpha=1,beta=4) #> [1] 0.08314235 library(new.dist) psgrd(5,theta=3,alpha=1,beta=4) #> [1] 0.9989333 library(new.dist) qsgrd(.4,theta=3,alpha=1,beta=4) #> [1] 0.8358487 library(new.dist) rsgrd(5,theta=3,alpha=1,beta=4) #> [1] 0.5496157 0.6034637 0.7497235 1.4067932 0.8949305 library(new.dist) dsod(0.4, alpha=1, beta=2) #> [1] 0.6986559 library(new.dist) psod(0.4, alpha=1, beta=2) #> [1] 0.1490371 library(new.dist) qsod(.8, alpha=1, beta=2) #> [1] 0.9607689 library(new.dist) rsod(5, alpha=1, beta=2) #> [1] 0.9631955 0.7440641 0.9833585 0.9677050 0.6694175 library(new.dist) dugd(1, theta=0.5) #> [1] 0.6931472 library(new.dist) pugd(1,theta=.5) #> [1] 0.6931472 library(new.dist) qugd(0.6,theta=.1) #> [1] 4 library(new.dist) rugd(5,theta=.1) #> [1] 2 2 5 7 3 library(new.dist) dtpmd(1, beta=2, alpha=3) #> [1] 0.04952547 library(new.dist) ptpmd(1,beta=2,alpha=3) #> [1] 0.008115344 library(new.dist) qtpmd(.5,beta=2,alpha=3) #> [1] 1.990084 library(new.dist) rtpmd(5,beta=2,alpha=3) #> [1] 2.421388 2.009175 1.862731 1.905231 1.501303 library(new.dist) dtprd(5, lambda=4, mu=4) #> [1] 0.1465251 library(new.dist) ptprd(2,lambda=2,mu=1) #> [1] 0.8646647 library(new.dist) qtprd(.5,lambda=2,mu=1) #> [1] 1.588705 library(new.dist) rtprd(5,lambda=2,mu=1) #> [1] 1.376441 1.867998 1.326992 1.196665 1.894051 library(new.dist) duigd(1, mu=2, lambda=3) #> [1] 0.4749088 library(new.dist) puigd(1,mu=2,lambda=3) #> [1] 0.2873867 library(new.dist) quigd(.1,mu=2,lambda=3) #> [1] 0.6104128 library(new.dist) ruigd(5,mu=2,lambda=3) #> [1] 1.094787 1.652567 1.507226 2.685013 1.087664 library(new.dist) dwgd(1,alpha=.2,lambda=3) #> [1] 0.79872 library(new.dist) dwgd(1,alpha=.2,lambda=3) #> [1] 0.79872 library(new.dist) qwgd(.98,alpha=.2,lambda=3) #> [1] 3 library(new.dist) rwgd(5,alpha=.2,lambda=3) #> [1] 2 1 1 1 1 library(new.dist) ddld(1,theta=2) #> [1] 0.1828223 library(new.dist) ddld(1,theta=2) #> [1] 0.1828223 library(new.dist) qdld(.993,theta=2) #> [1] 3 library(new.dist) rdld(5,theta=1) #> [1] 1 1 6 3 1 library(new.dist) demd(1,theta=2) #> [1] 0.4839414 library(new.dist) pemd(1,theta=2) #> [1] 0.198748 library(new.dist) qemd(.4,theta=5) #> [1] 2.161694 library(new.dist) remd(5,theta=1) #> [1] 1.5658134 1.9030999 1.0665493 2.1818348 0.5230258 library(new.dist) depkd(0.1,lambda=2,alpha=3) #> [1] 0.58806 library(new.dist) depkd(0.1,lambda=2,alpha=3) #> [1] 0.58806 library(new.dist) pepkd(0.5,lambda=2,alpha=3) #> [1] 0.578125 library(new.dist) repkd(5,lambda=2,alpha=3) #> [1] 0.6728794 0.4857527 0.5533435 0.3390230 0.4798522 library(new.dist) dgld(1,a=2,alpha=3,beta=4) #> [1] 0.2056491 library(new.dist) dgld(1,a=2,alpha=3,beta=4) #> [1] 0.2056491 library(new.dist) qgld(.8,a=2,alpha=3,beta=4) #> [1] 6.852518 library(new.dist) rgld(5,a=2,alpha=3,beta=4) #> [1]  1.4861286  0.5551489  6.6217551 16.9903821  1.8444579 library(new.dist) dndd(2,theta=2) #> [1] 0.03530023 library(new.dist) pndd(1,theta=2) #> [1] 0.9572635 library(new.dist) qndd(.5,theta=2) #> [1] 0 library(new.dist) rndd(5,theta=1) #> [1] 2 3 0 2 2 library(new.dist) dEPd(1, lambda=2, beta=3) #> [1] 0.05165063 library(new.dist) pEPd(1, lambda=2, beta=3) #> [1] 0.9836125 library(new.dist) qEPd(.8,lambda=2,beta=3) #> [1] 0.295895 library(new.dist) rEPd(5,lambda=2,beta=3) #> [1] 0.08482085 0.48975249 0.08058934 0.06998736 0.24398157 library(new.dist) dnoPDD(1,theta=2) #> [1] 0.1412194 library(new.dist) pnoPDD(1,theta=2) #> [1] 0.3115553 library(new.dist) dnoPDD(.8,theta=2) #> [1] 0.163461 library(new.dist) rnoPDD(5,theta=2) #> [1] 3.3467236 0.3703510 0.6396957 2.0478214 2.1720540 library(new.dist) domd(1,alpha=.2) #> [1] 0.4123689 library(new.dist) pomd(1,alpha=.2) #> [1] 0.596272 library(new.dist) qomd(.8,alpha=.2) #> [1] 1.637047 library(new.dist) romd(5,alpha=.2) #> [1] 0.2330967 0.3001878 0.6396154 2.3486272 0.1188196 library(new.dist) dpldd(1, alpha=2, beta=3, theta=4) #> [1] 0.1766842 library(new.dist) ppldd(1, alpha=2, beta=3, theta=4) #> [1] 0.9742603 library(new.dist) qpldd(.8, alpha=2, beta=3, theta=4) #> [1] 0.6109249 library(new.dist) rpldd(5, alpha=2, beta=3, theta=4) #> [1] 0.3451631 0.4763925 0.6285329 0.3015803 0.3860768 library(new.dist) drld(1,theta=2) #> [1] 0.3608941 library(new.dist) prld(1,theta=2) #> [1] 0.7744412 library(new.dist) qrld(.5,theta=2) #> [1] 0.4872058 library(new.dist) rrld(5,theta=1) #> [1] 2.3912073 1.1763814 0.8276766 0.2071751 0.9654549"},{"path":"https://akmn35.github.io/new.dist/index.html","id":"corresponding-author","dir":"","previous_headings":"","what":"Corresponding Author","title":"Alternative continuous and discrete Distributions","text":"Department Statistics, Faculty Science, Selcuk University, 42250, Konya, Turkey  Email:coskun@selcuk.edu.tr","code":""},{"path":"https://akmn35.github.io/new.dist/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Alternative continuous and discrete Distributions","text":"Akdoğan, Y., Kuş, C., Asgharzadeh, ., Kınacı, İ., & Sharafi, F. (2016). Uniform-geometric distribution. Journal Statistical Computation Simulation, 86(9), 1754-1770. Akgül, F. G., Acıtaş, Ş. ve Şenoğlu, B., 2018, Inferences stress–strength reliability based ranked set sampling data case Lindley distribution, Journal statistical computation simulation, 88 (15), 3018-3032. Bakouch, H. S., Khan, M. N., Hussain, T. ve Chesneau, C., 2019, power log-Dagum distribution: estimation applications, Journal Applied Statistics, 46 (5), 874-892. Bakouch, H. S., Jazi, M. . ve Nadarajah, S., 2014, new discrete distribution, Statistics, 48 (1), 200-240. Birbiçer, İ. ve Genç, . İ., 2022, parameter estimation standard omega distribution. Journal Applied Statistics, 1-17. Cordeiro, G. M., Ortega, E. M. ve Popović, B. V., 2015, gamma-Lomax distribution, Journal statistical computation simulation, 85 (2), 305-319. Dey, S., Dey, T. ve Kundu, D., 2014, Two-parameter Rayleigh distribution: different methods estimation, American Journal Mathematical Management Sciences, 33 (1), 55-74. Ghitany, M., Mazucheli, J., Menezes, . ve Alqallaf, F., 2019, unit-inverse Gaussian distribution: new alternative two-parameter distributions unit interval, Communications Statistics-Theory Methods, 48 (14), 3423-3438. Gómez-Déniz, E. ve Calderín-Ojeda, E., 2011, discrete Lindley distribution: properties applications.Journal statistical computation simulation, 81 (11), 1405-1416. Iriarte, Y. ., Vilca, F., Varela, H. ve Gómez, H. W., 2017, Slashed generalized Rayleigh distribution, Communications Statistics-Theory Methods, 46 (10), 4686-4699. Jodra, P., Gomez, H. W., Jimenez-Gamero, M. D., & Alba-Fernandez, M. V. (2017). power Muth distribution . Mathematical Modelling Analysis, 22(2), 186-201. Jodrá, P., Jiménez-Gamero, M. D. ve Alba-Fernández, M. V., 2015, Muth distribution, Mathematical Modelling Analysis, 20 (3), 291-310. Kohansal, . ve Bakouch, H. S., 2021, Estimation procedures Kumaraswamy distribution parameters adaptive type-II hybrid progressive censoring, Communications Statistics-Simulation Computation, 50 (12), 4059-4078. Krishna, H., Vivekanand ve Kumar, K., 2015, Estimation Maxwell distribution randomly censored data, Journal statistical computation simulation, 85 (17), 3560-3578. Kuş, C., 2007, new lifetime distribution, Computational Statistics & Data Analysis, 51 (9), 4497-4509. Najarzadegan, H., Alamatsaz, M. H., Kazemi, . ve Kundu, D., 2020, Weighted bivariate geometric distribution: Simulation estimation, Communications Statistics-Simulation Computation, 49 (9), 2419-2443. Ristić, M. M., & Balakrishnan, N. (2012), gamma-exponentiated exponential distribution. Journal statistical computation simulation, 82(8), 1191-1206. Shukla, K. K., Shanker, R. ve Tiwari, M. K., 2022, new one parameter discrete distribution applications, Journal Statistics Management Systems, 25 (1), 269-283. Vila, R. ve Niyazi Çankaya, M., 2022, bimodal Weibull distribution: properties inference,Journal Applied Statistics, 49 (12), 3044-3062.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/EPd.html","id":null,"dir":"Reference","previous_headings":"","what":"The EP distribution — EPd","title":"The EP distribution — EPd","text":"Density, distribution function, quantile function random generation EP distribution parameters.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/EPd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The EP distribution — EPd","text":"","code":"dEPd(x, lambda, beta, log = FALSE)  pEPd(q, lambda, beta, lower.tail = TRUE, log.p = FALSE)  qEPd(p, lambda, beta, lower.tail = TRUE)  rEPd(n, lambda, beta)"},{"path":"https://akmn35.github.io/new.dist/reference/EPd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The EP distribution — EPd","text":"x, q vector quantiles. lambda, beta parameters. log, log.p logical; TRUE, probabilities p given log(p). lower.tail logical; TRUE (default), probabilities \\(P\\left[ X\\leq x\\right]\\), otherwise,\\(P\\left[ X>x\\right] \\). p vector probabilities. n number observations. length(n) > 1, length taken number required.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/EPd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The EP distribution — EPd","text":"dEPd gives density, pEPd gives distribution function, qEPd gives quantile function rEPd generates random deviates.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/EPd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The EP distribution — EPd","text":"EP distribution parameters \\(\\lambda\\), \\(\\beta\\), density given $$f\\left( x\\right) =\\frac{\\lambda \\beta } {\\left( 1-e^{-\\lambda }\\right) } e^{-\\lambda -\\beta x+\\lambda e^{-\\beta x}},$$ $$x>\\mathbb{R}_{+},~\\beta ,\\lambda \\\\mathbb{R}_{+}.$$","code":""},{"path":"https://akmn35.github.io/new.dist/reference/EPd.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"The EP distribution — EPd","text":"Kuş, C., 2007, new lifetime distribution, Computational Statistics & Data Analysis, 51 (9), 4497-4509.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/EPd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The EP distribution — EPd","text":"","code":"library(new.dist) dEPd(1, lambda=2, beta=3) #> [1] 0.05165063 pEPd(1,lambda=2,beta=3) #> [1] 0.9836125 qEPd(.8,lambda=2,beta=3) #> [1] 0.295895 rEPd(10,lambda=2,beta=3) #>  [1] 0.13110601 0.03984484 0.40905341 0.06145446 0.02052071 0.01848427 #>  [7] 0.06787634 0.76263750 0.01592399 0.44343645"},{"path":"https://akmn35.github.io/new.dist/reference/bwd.html","id":null,"dir":"Reference","previous_headings":"","what":"A Bimodal Weibull Distribution — bwd","title":"A Bimodal Weibull Distribution — bwd","text":"Density, distribution function, quantile function random generation Bimodal Weibull Distribution parameters shape scale.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/bwd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A Bimodal Weibull Distribution — bwd","text":"","code":"dbwd(x, alpha, beta = 1, sigma, log = FALSE)  pbwd(q, alpha, beta = 1, sigma, lower.tail = TRUE, log.p = FALSE)  qbwd(p, alpha, beta = 1, sigma, lower.tail = TRUE)  rbwd(n, alpha, beta = 1, sigma)"},{"path":"https://akmn35.github.io/new.dist/reference/bwd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A Bimodal Weibull Distribution — bwd","text":"x, q vector quantiles. alpha shape parameter. beta scale parameter. sigma parameter controls uni- bimodality distribution. log, log.p logical; TRUE, probabilities p given log(p). lower.tail logical; TRUE (default), probabilities \\(P\\left[ X\\leq x\\right]\\), otherwise,\\(P\\left[ X>x\\right] \\). p vector probabilities. n number observations. length(n) > 1, length taken number required.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/bwd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A Bimodal Weibull Distribution — bwd","text":"dbwd gives density, pbwd gives distribution function, qbwd gives quantile function rbwd generates random deviates.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/bwd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A Bimodal Weibull Distribution — bwd","text":"Bimodal Weibull distribution shape parameter \\(\\alpha\\), scale parameter \\(\\beta\\) parameter controls uni- bimodality distribution \\(\\sigma\\), density given $$f\\left( x\\right) =\\frac{\\alpha }{\\beta Z_{\\theta }} \\left[ 1+\\left( 1-\\sigma~x\\right) ^{2}\\right] \\left( \\frac{x}{\\beta } \\right) ^{\\alpha -1}\\exp \\left( -\\left( \\frac{x}{\\beta }\\right) ^{\\alpha } \\right),$$ $$Z_{\\theta }=2+\\sigma ^{2}\\beta ^{2}\\Gamma \\left( 1+\\left( 2/\\alpha \\right)\\right) -2\\sigma \\beta \\Gamma \\left( 1+\\left( 1/\\alpha \\right) \\right) $$ $$x\\geq 0,~\\alpha ,\\beta >0,~\\sigma \\\\mathbb{R}.$$","code":""},{"path":"https://akmn35.github.io/new.dist/reference/bwd.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"A Bimodal Weibull Distribution — bwd","text":"Vila, R. ve Niyazi Çankaya, M., 2022, bimodal Weibull distribution: properties inference, Journal Applied Statistics, 49 (12), 3044-3062.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/bwd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A Bimodal Weibull Distribution — bwd","text":"","code":"library(new.dist) dbwd(1,alpha=2,beta=3,sigma=4) #> [1] 0.01594262 pbwd(1,alpha=2,beta=3,sigma=4) #> [1] 0.003859685 qbwd(.7,alpha=2,beta=3,sigma=4) #> [1] 4.759942 rbwd(10,alpha=2,beta=3,sigma=4) #>  [1] 3.614182 2.953170 5.564030 5.347102 5.085257 2.563020 5.577857 3.990269 #>  [9] 3.905077 5.275924"},{"path":"https://akmn35.github.io/new.dist/reference/dld.html","id":null,"dir":"Reference","previous_headings":"","what":"The discrete Lindley distribution — dld","title":"The discrete Lindley distribution — dld","text":"Density, distribution function, quantile function random generation discrete Lindley distribution parameter.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/dld.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The discrete Lindley distribution — dld","text":"","code":"ddld(x, theta, log = FALSE)  pdld(q, theta, lower.tail = TRUE, log.p = FALSE)  qdld(p, theta, lower.tail = TRUE)  rdld(n, theta)"},{"path":"https://akmn35.github.io/new.dist/reference/dld.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The discrete Lindley distribution — dld","text":"x, q vector quantiles. theta parameter. log, log.p logical; TRUE, probabilities p given log(p). lower.tail logical; TRUE (default), probabilities \\(P\\left[ X\\leq x\\right]\\), otherwise,\\(P\\left[ X>x\\right] \\). p vector probabilities. n number observations. length(n) > 1, length taken number required.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/dld.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The discrete Lindley distribution — dld","text":"ddld gives density, pdld gives distribution function, qdld gives quantile function rdld generates random deviates.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/dld.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The discrete Lindley distribution — dld","text":"discrete Lindley distribution parameter \\(\\theta\\), density given $$f\\left( x\\right) =\\frac{\\lambda ^{x}}{1-\\log \\lambda } \\left( \\lambda \\log\\lambda +\\left( 1-\\lambda \\right) \\left( 1-\\log \\lambda^{x+1}\\right)\\right), $$ $$x=0,1,...,~\\theta >0,~\\lambda =e^{-\\theta }.$$","code":""},{"path":"https://akmn35.github.io/new.dist/reference/dld.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"The discrete Lindley distribution — dld","text":"Gómez-Déniz, E. ve Calderín-Ojeda, E., 2011, discrete Lindley distribution: properties applications.Journal statistical computation simulation, 81 (11), 1405-1416.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/dld.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The discrete Lindley distribution — dld","text":"","code":"library(new.dist) ddld(1,theta=2) #> [1] 0.1828223 pdld(2,theta=1) #> [1] 0.8755323 qdld(.993,theta=2) #> [1] 3 rdld(10,theta=1) #>  [1] 0 1 0 0 0 0 0 1 1 0"},{"path":"https://akmn35.github.io/new.dist/reference/emd.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimation in Maxwell distribution with randomly censored data — emd","title":"Estimation in Maxwell distribution with randomly censored data — emd","text":"Density, distribution function, quantile function random generation Estimation Maxwell distribution parameter scale.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/emd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimation in Maxwell distribution with randomly censored data — emd","text":"","code":"demd(x, theta = 1, log = FALSE)  pemd(q, theta = 1, lower.tail = TRUE, log.p = FALSE)  qemd(p, theta = 1, lower.tail = TRUE)  remd(n, theta = 1)"},{"path":"https://akmn35.github.io/new.dist/reference/emd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimation in Maxwell distribution with randomly censored data — emd","text":"x, q vector quantiles. theta scale parameter. log, log.p logical; TRUE, probabilities p given log(p). lower.tail logical; TRUE (default), probabilities \\(P\\left[ X\\leq x\\right]\\), otherwise,\\(P\\left[ X>x\\right] \\). p vector probabilities. n number observations. length(n) > 1, length taken number required.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/emd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimation in Maxwell distribution with randomly censored data — emd","text":"demd gives density, pemd gives distribution function, qemd gives quantile function remd generates random deviates.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/emd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimation in Maxwell distribution with randomly censored data — emd","text":"Estimation Maxwell distribution scale parameter \\(\\theta\\), density $$f\\left( x\\right) =\\frac{4}{\\sqrt{\\pi }} \\frac{1}{\\theta ^{3/2}}x^{2}e^{-x^{2}/\\theta },$$ $$0\\leq x<\\infty ,~~\\theta >0.$$","code":""},{"path":"https://akmn35.github.io/new.dist/reference/emd.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimation in Maxwell distribution with randomly censored data — emd","text":"Krishna, H., Vivekanand ve Kumar, K., 2015, Estimation Maxwell distribution randomly censored data, Journal statistical computation simulation, 85 (17), 3560-3578.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/emd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimation in Maxwell distribution with randomly censored data — emd","text":"","code":"library(new.dist) demd(1,theta=2) #> [1] 0.4839414 pemd(1,theta=2) #> [1] 0.198748 qemd(.4,theta=5) #> [1] 2.161694 remd(10,theta=1) #>  [1]  0.5333597  1.7367826  0.5716139  0.5093660  1.6669121  0.6266496 #>  [7]  1.7453531 -0.2742797  1.0006349  1.4682925"},{"path":"https://akmn35.github.io/new.dist/reference/epkd.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimation procedures for kumaraswamy distribution parameters under adaptive\ntype-II hybrid progressive censoring — epkd","title":"Estimation procedures for kumaraswamy distribution parameters under adaptive\ntype-II hybrid progressive censoring — epkd","text":"Density, distribution function, quantile function random generation Estimation procedures kumaraswamy distribution parameters shapes.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/epkd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimation procedures for kumaraswamy distribution parameters under adaptive\ntype-II hybrid progressive censoring — epkd","text":"","code":"depkd(x, lambda, alpha, log = FALSE)  pepkd(q, lambda, alpha, lower.tail = TRUE, log.p = FALSE)  qepkd(p, lambda, alpha, lower.tail = TRUE)  repkd(n, lambda, alpha)"},{"path":"https://akmn35.github.io/new.dist/reference/epkd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimation procedures for kumaraswamy distribution parameters under adaptive\ntype-II hybrid progressive censoring — epkd","text":"x, q vector quantiles. alpha, lambda non-negative shape parameters. log, log.p logical; TRUE, probabilities p given log(p). lower.tail logical; TRUE (default), probabilities \\(P\\left[ X\\leq x\\right]\\), otherwise,\\(P\\left[ X>x\\right] \\). p vector probabilities. n number observations. length(n) > 1, length taken number required.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/epkd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimation procedures for kumaraswamy distribution parameters under adaptive\ntype-II hybrid progressive censoring — epkd","text":"depkd gives density, pepkd gives distribution function, qepkd gives quantile function repkd generates random deviates.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/epkd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimation procedures for kumaraswamy distribution parameters under adaptive\ntype-II hybrid progressive censoring — epkd","text":"Estimation procedures kumaraswamy distribution non-negative shape parameters \\(\\alpha\\), \\(\\lambda\\) density given $$f\\left( x\\right) =\\alpha \\lambda x^{\\lambda -1}\\left( 1-x^{\\lambda } \\right)^{\\alpha -1},$$ $$0<x<1,~~\\alpha ,\\lambda >0.$$","code":""},{"path":"https://akmn35.github.io/new.dist/reference/epkd.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimation procedures for kumaraswamy distribution parameters under adaptive\ntype-II hybrid progressive censoring — epkd","text":"Kohansal, . ve Bakouch, H. S., 2021, Estimation procedures Kumaraswamy distribution parameters adaptive type-II hybrid progressive censoring, Communications Statistics-Simulation Computation, 50 (12), 4059-4078.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/epkd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimation procedures for kumaraswamy distribution parameters under adaptive\ntype-II hybrid progressive censoring — epkd","text":"","code":"library(\"new.dist\") depkd(0.1,lambda=2,alpha=3) #> [1] 0.58806 pepkd(0.5,lambda=2,alpha=3) #> [1] 0.578125 qepkd(.8,lambda=2,alpha=3) #> [1] 0.6443574 repkd(10,lambda=2,alpha=3) #>  [1] 0.5304365 0.3376704 0.2889163 0.7406507 0.6741023 0.7509387 0.2303647 #>  [8] 0.3815931 0.1879515 0.6650170"},{"path":"https://akmn35.github.io/new.dist/reference/gld.html","id":null,"dir":"Reference","previous_headings":"","what":"The gamma-Lomax distribution — gld","title":"The gamma-Lomax distribution — gld","text":"Density, distribution function, quantile function random generation gamma-Lomax distribution parameters shapes scale.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/gld.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The gamma-Lomax distribution — gld","text":"","code":"dgld(x, a, alpha, beta = 1, log = FALSE)  pgld(q, a, alpha, beta = 1, lower.tail = TRUE, log.p = FALSE)  qgld(p, a, alpha, beta = 1, lower.tail = TRUE)  rgld(n, a, alpha, beta = 1)"},{"path":"https://akmn35.github.io/new.dist/reference/gld.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The gamma-Lomax distribution — gld","text":"x, q vector quantiles. , alpha shape parameters. beta scale parameter. log, log.p logical; TRUE, probabilities p given log(p). lower.tail logical; TRUE (default), probabilities \\(P\\left[ X\\leq x\\right]\\), otherwise,\\(P\\left[ X>x\\right] \\). p vector probabilities. n number observations. length(n) > 1, length taken number required.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/gld.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The gamma-Lomax distribution — gld","text":"dgld gives density, pgld gives distribution function, qgld gives quantile function rgld generates random deviates.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/gld.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The gamma-Lomax distribution — gld","text":"gamma-Lomax distribution shape parameters \\(\\),\\(\\alpha\\) scale parameter \\(\\beta\\), density given $$f\\left( x\\right) =\\frac{\\alpha \\beta ^{\\alpha }} {\\Gamma \\left( \\right)\\left( \\beta +x\\right) ^{\\alpha +1}}\\left\\{ -\\alpha \\log \\left( \\frac{\\beta }{\\beta +x}\\right) \\right\\} ^{-1},$$ $$x>0,~,\\alpha ,\\beta >0.$$","code":""},{"path":"https://akmn35.github.io/new.dist/reference/gld.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"The gamma-Lomax distribution — gld","text":"Cordeiro, G. M., Ortega, E. M. ve Popović, B. V., 2015, gamma-Lomax distribution, Journal statistical computation simulation, 85 (2), 305-319. Ristić, M. M., & Balakrishnan, N. (2012), gamma-exponentiated exponential distribution. Journal statistical computation simulation , 82(8), 1191-1206.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/gld.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The gamma-Lomax distribution — gld","text":"","code":"library(new.dist) dgld(1, a=2, alpha=3, beta=4) #> [1] 0.2056491 pgld(1,a=2,alpha=3,beta=4) #> [1] 0.1452515 qgld(.8,a=2,alpha=3,beta=4) #> [1] 6.852518 rgld(10,a=2,alpha=3,beta=4) #>  [1]  1.6000772  0.5014392  1.0963256  5.0090667  4.9039330 16.0406161 #>  [7]  2.9186983 13.0273879 34.8614706  4.5052780"},{"path":"https://akmn35.github.io/new.dist/reference/ndd.html","id":null,"dir":"Reference","previous_headings":"","what":"A new discrete distribution — ndd","title":"A new discrete distribution — ndd","text":"Density, distribution function, quantile function random generation new discrete distribution parameter.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/ndd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A new discrete distribution — ndd","text":"","code":"dndd(x, theta, log = FALSE)  pndd(q, theta, lower.tail = TRUE, log.p = FALSE)  qndd(p, theta, lower.tail = TRUE)  rndd(n, theta)"},{"path":"https://akmn35.github.io/new.dist/reference/ndd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A new discrete distribution — ndd","text":"x, q vector quantiles. theta parameter. log, log.p logical; TRUE, probabilities p given log(p). lower.tail logical; TRUE (default), probabilities \\(P\\left[ X\\leq x\\right]\\), otherwise,\\(P\\left[ X>x\\right] \\). p vector probabilities. n number observations. length(n) > 1, length taken number required.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/ndd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A new discrete distribution — ndd","text":"dndd gives density, pndd gives distribution function, qndd gives quantile function rndd generates random deviates.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/ndd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A new discrete distribution — ndd","text":"new discrete distribution parameter \\(\\theta\\), density given $$f\\left( x\\right) =\\frac{\\lambda ^{x}}{1+\\theta }  \\left( \\theta \\left(1-2\\lambda \\right) +\\left( 1-\\lambda \\right)  \\left( 1+\\theta x\\right)\\right),$$ $$x=0,1,2,...~,\\lambda =\\exp \\left( -\\theta \\right) ,~\\theta >0.$$","code":""},{"path":"https://akmn35.github.io/new.dist/reference/ndd.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"A new discrete distribution — ndd","text":"Bakouch, H. S., Jazi, M. . ve Nadarajah, S., 2014, new discrete distribution, Statistics, 48 (1), 200-240.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/ndd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A new discrete distribution — ndd","text":"","code":"library(new.dist) dndd(2,theta=2) #> [1] 0.03530023 pndd(1,theta=2) #> [1] 0.9572635 qndd(.5,theta=2) #> [1] 0 rndd(10,theta=1) #>  [1] 0 0 0 0 0 3 2 1 1 0"},{"path":"https://akmn35.github.io/new.dist/reference/noPDD.html","id":null,"dir":"Reference","previous_headings":"","what":"A new one parameter discrete distribution and its applications — noPDD","title":"A new one parameter discrete distribution and its applications — noPDD","text":"Density, distribution function, quantile function random generation new one parameter discrete distribution parameter scale.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/noPDD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A new one parameter discrete distribution and its applications — noPDD","text":"","code":"dnoPDD(x, theta = 1, log = FALSE)  pnoPDD(q, theta = 1, lower.tail = TRUE, log.p = FALSE)  qnoPDD(p, theta = 1, lower.tail = TRUE)  rnoPDD(n, theta = 1)"},{"path":"https://akmn35.github.io/new.dist/reference/noPDD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A new one parameter discrete distribution and its applications — noPDD","text":"x, q vector quantiles. theta scale parameter. log, log.p logical; TRUE, probabilities p given log(p). lower.tail logical; TRUE (default), probabilities \\(P\\left[ X\\leq x\\right]\\), otherwise,\\(P\\left[ X>x\\right] \\). p vector probabilities. n number observations. length(n) > 1, length taken number required.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/noPDD.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A new one parameter discrete distribution and its applications — noPDD","text":"dnoPDD gives density, pnoPDD gives distribution function, qnoPDD gives quantile function rnoPDD generates random deviates.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/noPDD.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A new one parameter discrete distribution and its applications — noPDD","text":"new one parameter discrete distribution scale parameter \\(\\theta\\), density given $$f\\left( x\\right) =\\frac{\\theta ^{6}}{\\theta ^{6}+120}  \\left( \\theta+x^{5}\\right) e^{-\\theta x},$$ $$x>0,~\\theta >0.$$","code":""},{"path":"https://akmn35.github.io/new.dist/reference/noPDD.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"A new one parameter discrete distribution and its applications — noPDD","text":"Shukla, K. K., Shanker, R. ve Tiwari, M. K., 2022, new one parameter discrete distribution applications, Journal Statistics Management Systems, 25 (1), 269-283.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/noPDD.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A new one parameter discrete distribution and its applications — noPDD","text":"","code":"library(new.dist) dnoPDD(1,theta=2) #> [1] 0.1412194 pnoPDD(1,theta=2) #> [1] 0.3115553 qnoPDD(.1,theta=1) #> [1] 3.086421 rnoPDD(10,theta=1) #>  [1]  5.270360 10.434584  3.272325  5.312326  4.403496  6.817836  5.204442 #>  [8]  7.050936 10.015397  5.296998"},{"path":"https://akmn35.github.io/new.dist/reference/omd.html","id":null,"dir":"Reference","previous_headings":"","what":"on the muth distribution — omd","title":"on the muth distribution — omd","text":"Density, distribution function, quantile function random generation muth distribution distribution parameter.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/omd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"on the muth distribution — omd","text":"","code":"domd(x, alpha, log = FALSE)  pomd(q, alpha, lower.tail = TRUE, log.p = FALSE)  qomd(p, alpha, lower.tail = TRUE)  romd(n, alpha)"},{"path":"https://akmn35.github.io/new.dist/reference/omd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"on the muth distribution — omd","text":"x, q vector quantiles. alpha parameter. log, log.p logical; TRUE, probabilities p given log(p). lower.tail logical; TRUE (default), probabilities \\(P\\left[ X\\leq x\\right]\\), otherwise,\\(P\\left[ X>x\\right] \\). p vector probabilities. n number observations. length(n) > 1, length taken number required.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/omd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"on the muth distribution — omd","text":"domd gives density, pomd gives distribution function, qomd gives quantile function romd generates random deviates.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/omd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"on the muth distribution — omd","text":"muth distribution distribution parameter \\(\\alpha\\), density given $$f\\left( x\\right) =\\left( e^{\\alpha x}- \\alpha \\right) e^{\\alpha x-\\left(1/\\alpha \\right) \\left( e^{\\alpha x}- 1\\right) },$$ $$x>0,~\\alpha \\\\left( 0,1\\right]. $$","code":""},{"path":"https://akmn35.github.io/new.dist/reference/omd.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"on the muth distribution — omd","text":"Jodrá, P., Jiménez-Gamero, M. D. ve Alba-Fernández, M. V., 2015, Muth distribution, Mathematical Modelling Analysis, 20 (3), 291-310.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/omd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"on the muth distribution — omd","text":"","code":"library(new.dist) domd(1,alpha=.2) #> [1] 0.4123689 pomd(1,alpha=.2) #> [1] 0.596272 qomd(.8,alpha=.1) #> [1] 1.631923 romd(10,alpha=1) #>  [1] 0.3156510 1.0833492 0.8604143 1.7321763 0.6444619 0.6475073 1.3467114 #>  [8] 0.9248364 1.1053409 1.0381346"},{"path":"https://akmn35.github.io/new.dist/reference/pldd.html","id":null,"dir":"Reference","previous_headings":"","what":"A Power Log Dagum Distribution — pldd","title":"A Power Log Dagum Distribution — pldd","text":"Density, distribution function, quantile function random generation Power Log Dagum distribution parameters.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/pldd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A Power Log Dagum Distribution — pldd","text":"","code":"dpldd(x, alpha, beta, theta, log = FALSE)  ppldd(q, alpha, beta, theta, lower.tail = TRUE, log.p = FALSE)  qpldd(p, alpha, beta, theta, lower.tail = TRUE)  rpldd(n, alpha, beta, theta)"},{"path":"https://akmn35.github.io/new.dist/reference/pldd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A Power Log Dagum Distribution — pldd","text":"x, q vector quantiles. alpha, beta, theta parameters. log, log.p logical; TRUE, probabilities p given log(p). lower.tail logical; TRUE (default), probabilities \\(P\\left[ X\\leq x\\right]\\), otherwise,\\(P\\left[ X>x\\right] \\). p vector probabilities. n number observations. length(n) > 1, length taken number required.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/pldd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A Power Log Dagum Distribution — pldd","text":"dpldd gives density, ppldd gives distribution function, qpldd gives quantile function rpldd generates random deviates.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/pldd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A Power Log Dagum Distribution — pldd","text":"Power Log Dagum Distribution parameters \\(\\alpha\\), \\(\\beta\\), \\(\\theta\\), density given $$f\\left( x\\right) =\\alpha  \\left( \\beta +\\theta \\left\\vert x\\right\\vert^{\\beta -1}  \\right) e^{-\\left( \\beta x+sign\\left( x\\right)  \\left( \\theta/\\beta \\right) \\left\\vert    x\\right\\vert ^{\\beta }\\right) ~}~\\left(1+e^{-\\left( \\beta x+sign    \\left( x\\right)\\left( \\theta /\\beta \\right)    \\left\\vert x\\right\\vert ^{\\beta }\\right) }    \\right) ^{-\\left( \\alpha +1\\right)},$$ $$x\\\\mathbb{R},~\\beta \\\\mathbb{R},~\\alpha >0,~\\theta \\geq 0$$","code":""},{"path":"https://akmn35.github.io/new.dist/reference/pldd.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"A Power Log Dagum Distribution — pldd","text":"distributions hazard function $$h\\left( x\\right) =\\frac{\\alpha \\left( \\beta +\\theta \\left\\vert x\\right\\vert^{\\beta -1} \\right) e^{-\\left( \\beta x+sign\\left( x\\right) \\left( \\theta/\\beta \\right) \\left\\vert x\\right\\vert ^{\\beta }\\right) }\\left( 1+e^{-\\left(\\beta x+sign \\left( x\\right) \\left( \\theta /\\beta \\right) \\left\\vert x \\right\\vert ^{\\beta }\\right) }\\right) ^{-\\left(\\alpha +1\\right) }}         {1-\\left( 1+e^{-\\left( \\beta x+sign\\left( x\\right) \\left( \\theta / \\beta \\right) \\left\\vert x\\right\\vert ^{\\beta }\\right) } \\right) ^{-\\alpha }} .$$","code":""},{"path":"https://akmn35.github.io/new.dist/reference/pldd.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"A Power Log Dagum Distribution — pldd","text":"Bakouch, H. S., Khan, M. N., Hussain, T. ve Chesneau, C., 2019, power log-Dagum distribution: estimation applications, Journal Applied Statistics, 46 (5), 874-892.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/pldd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A Power Log Dagum Distribution — pldd","text":"","code":"library(new.dist) dpldd(1, alpha=2, beta=3, theta=4) #> [1] 0.1766842 ppldd(1,alpha=2,beta=3,theta=4) #> [1] 0.9742603 qpldd(.8,alpha=2,beta=3,theta=4) #> [1] 0.6109249 rpldd(10,alpha=2,beta=3,theta=4) #>  [1]  0.80150153 -0.32611252  0.52572073  0.12652130  0.66096232  0.39849984 #>  [7]  0.02355898 -0.06350321  0.80719006  0.15140592"},{"path":"https://akmn35.github.io/new.dist/reference/rld.html","id":null,"dir":"Reference","previous_headings":"","what":"Inferences on stress–strength reliability based on ranked set sampling data\nincase of Lindley distribution — rld","title":"Inferences on stress–strength reliability based on ranked set sampling data\nincase of Lindley distribution — rld","text":"Density, distribution function, quantile function random generation Inferences stress–strength reliability based ranked set sampling data incase Lindley distributions parameter.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/rld.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inferences on stress–strength reliability based on ranked set sampling data\nincase of Lindley distribution — rld","text":"","code":"drld(x, theta, log = FALSE)  prld(q, theta, lower.tail = TRUE, log.p = FALSE)  qrld(p, theta, lower.tail = TRUE)  rrld(n, theta)"},{"path":"https://akmn35.github.io/new.dist/reference/rld.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inferences on stress–strength reliability based on ranked set sampling data\nincase of Lindley distribution — rld","text":"x, q vector quantiles. theta parameter. log, log.p logical; TRUE, probabilities p given log(p). lower.tail logical; TRUE (default), probabilities \\(P\\left[ X\\leq x\\right]\\), otherwise,\\(P\\left[ X>x\\right] \\). p vector probabilities. n number observations. length(n) > 1, length taken number required.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/rld.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inferences on stress–strength reliability based on ranked set sampling data\nincase of Lindley distribution — rld","text":"drld gives density, prld gives distribution function, qrld gives quantile function rrld generates random deviates.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/rld.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Inferences on stress–strength reliability based on ranked set sampling data\nincase of Lindley distribution — rld","text":"Inferences stress–strength reliability based ranked set sampling data incase Lindley distribution parameter \\(\\theta\\), density given $$f\\left( x\\right) =\\frac{\\theta ^{2}}{1+\\theta }\\left( 1+x\\right) e^{-\\theta~x},$$ $$x>0,~\\theta >0.$$","code":""},{"path":"https://akmn35.github.io/new.dist/reference/rld.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Inferences on stress–strength reliability based on ranked set sampling data\nincase of Lindley distribution — rld","text":"Akgül, F. G., Acıtaş, Ş. ve Şenoğlu, B., 2018, Inferences stress–strength reliability based ranked set sampling data case Lindley distribution, Journal statistical computation simulation, 88 (15), 3018-3032.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/rld.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Inferences on stress–strength reliability based on ranked set sampling data\nincase of Lindley distribution — rld","text":"","code":"library(new.dist) drld(1,theta=2) #> [1] 0.3608941 prld(1,theta=2) #> [1] 0.7744412 qrld(.8,theta=1) #> [1] 2.397276 rrld(10,theta=1) #>  [1] 1.670409602 2.088082147 0.008689518 0.630233892 1.548867764 0.596722562 #>  [7] 0.944541416 0.104700184 1.057044063 0.529089243"},{"path":"https://akmn35.github.io/new.dist/reference/sgrd.html","id":null,"dir":"Reference","previous_headings":"","what":"Slashed generalized Rayleigh distribution — sgrd","title":"Slashed generalized Rayleigh distribution — sgrd","text":"Density, distribution function, quantile function random generation Slashed generalized Rayleigh distribution parameters shape, scale, kurtosis.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/sgrd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Slashed generalized Rayleigh distribution — sgrd","text":"","code":"dsgrd(x, theta, alpha, beta, log = FALSE)  psgrd(q, theta, alpha, beta, lower.tail = TRUE, log.p = FALSE)  qsgrd(p, theta, alpha, beta, lower.tail = TRUE)  rsgrd(n, theta, alpha, beta)"},{"path":"https://akmn35.github.io/new.dist/reference/sgrd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Slashed generalized Rayleigh distribution — sgrd","text":"x, q vector quantiles. theta scale parameter. alpha shape parameter. beta kurtosis parameter. log, log.p logical; TRUE, probabilities p given log(p). lower.tail logical; TRUE (default), probabilities \\(P\\left[ X\\leq x\\right]\\), otherwise,\\(P\\left[ X>x\\right] \\). p vector probabilities. n number observations. length(n) > 1, length taken number required.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/sgrd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Slashed generalized Rayleigh distribution — sgrd","text":"dsgrd gives density, psgrd gives distribution function, qsgrd gives quantile function rsgrd generates random deviates.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/sgrd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Slashed generalized Rayleigh distribution — sgrd","text":"Slashed generalized Rayleigh distribution shape parameter \\(\\alpha\\), scale parameter \\(\\theta\\) kurtosis parameter \\(\\beta\\), density given $$f\\left( x\\right) =\\frac{\\beta x^{-\\left( \\beta+1\\right)}}{\\Gamma \\left( \\alpha+1\\right) \\theta ^{\\beta/2}}\\Gamma \\left( \\frac{2\\alpha +\\beta +2}{2} \\right)F\\left( \\theta x^{2};\\frac{2\\alpha +\\beta +2}{2},1\\right), $$ F(.;,b) cdf Gamma (,b) distribution, $$x>0,~\\theta >0,~\\alpha >-1,~\\beta >0$$","code":""},{"path":"https://akmn35.github.io/new.dist/reference/sgrd.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Slashed generalized Rayleigh distribution — sgrd","text":"Iriarte, Y. ., Vilca, F., Varela, H. ve Gómez, H. W., 2017, Slashed generalized Rayleigh distribution, Communications Statistics- Theory Methods, 46 (10), 4686-4699.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/sgrd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Slashed generalized Rayleigh distribution — sgrd","text":"","code":"library(new.dist) dsgrd(2,theta=3,alpha=1,beta=4) #> [1] 0.08314235 psgrd(5,theta=3,alpha=1,beta=4) #> [1] 0.9989333 qsgrd(.4,theta=3,alpha=1,beta=4) #> [1] 0.8358487 rsgrd(10,theta=3,alpha=1,beta=4) #>  [1] 1.1784447 1.1141591 1.1610024 0.3614220 0.4969502 1.2706340 0.9636120 #>  [8] 0.8003834 1.2398459 1.2611956"},{"path":"https://akmn35.github.io/new.dist/reference/sod.html","id":null,"dir":"Reference","previous_headings":"","what":"On parameter estimation of the standard omega distribution — sod","title":"On parameter estimation of the standard omega distribution — sod","text":"Density, distribution function, quantile function random generation parameter estimation standard omega distributions parameters.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/sod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"On parameter estimation of the standard omega distribution — sod","text":"","code":"dsod(x, alpha, beta, log = FALSE)  psod(q, alpha, beta, lower.tail = TRUE, log.p = FALSE)  qsod(p, alpha, beta, lower.tail = TRUE)  rsod(n, alpha, beta)"},{"path":"https://akmn35.github.io/new.dist/reference/sod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"On parameter estimation of the standard omega distribution — sod","text":"x, q vector quantiles. alpha, beta parameters. log, log.p logical; TRUE, probabilities p given log(p). lower.tail logical; TRUE (default), probabilities \\(P\\left[ X\\leq x\\right]\\), otherwise,\\(P\\left[ X>x\\right] \\). p vector probabilities. n number observations. length(n) > 1, length taken number required.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/sod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"On parameter estimation of the standard omega distribution — sod","text":"dsod gives density, psod gives distribution function, qsod gives quantile function rsod generates random deviates.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/sod.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"On parameter estimation of the standard omega distribution — sod","text":"parameter estimation standard omega distribution parameters \\(\\alpha\\), \\(\\beta\\), density given $$f\\left( x\\right) =\\alpha \\beta x^{\\beta -1}\\frac{1}{1-x^{2\\beta }} \\left( \\frac{1+x^{\\beta }}{1-x^{\\beta }}\\right) ^{-\\alpha /2},$$ $$0<x<1,~\\alpha ,\\beta >0.$$","code":""},{"path":"https://akmn35.github.io/new.dist/reference/sod.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"On parameter estimation of the standard omega distribution — sod","text":"Birbiçer, İ. ve Genç, . İ., 2022, parameter estimation standard omega distribution. Journal Applied Statistics, 1-17.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/sod.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"On parameter estimation of the standard omega distribution — sod","text":"","code":"library(new.dist) dsod(0.4, alpha=1, beta=2) #> [1] 0.6986559 psod(0.4, alpha=1, beta=2) #> [1] 0.1490371 qsod(.8, alpha=1, beta=2) #> [1] 0.9607689 rsod(10, alpha=1, beta=2) #>  [1] 0.6997525 0.7882872 0.5480777 0.6936531 0.7319073 0.9952790 0.7878122 #>  [8] 0.6876920 0.7901241 0.7970627"},{"path":"https://akmn35.github.io/new.dist/reference/tpmd.html","id":null,"dir":"Reference","previous_headings":"","what":"The Power Muth Distribution — tpmd","title":"The Power Muth Distribution — tpmd","text":"Density, distribution function, quantile function random generation Power Muth distribution parameters shape scale.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/tpmd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Power Muth Distribution — tpmd","text":"","code":"dtpmd(x, beta = 1, alpha, log = FALSE)  ptpmd(q, beta = 1, alpha, lower.tail = TRUE, log.p = FALSE)  qtpmd(p, beta = 1, alpha, lower.tail = TRUE)  rtpmd(n, beta = 1, alpha)"},{"path":"https://akmn35.github.io/new.dist/reference/tpmd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Power Muth Distribution — tpmd","text":"x, q vector quantiles. beta scale parameter. alpha shape parameter. log, log.p logical; TRUE, probabilities p given log(p). lower.tail logical; TRUE (default), probabilities \\(P\\left[ X\\leq x\\right]\\), otherwise,\\(P\\left[ X>x\\right] \\). p vector probabilities. n number observations. length(n) > 1, length taken number required.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/tpmd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Power Muth Distribution — tpmd","text":"dtpmd gives density, ptpmd gives distribution function, qtpmd gives quantile function rtpmd generates random deviates.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/tpmd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The Power Muth Distribution — tpmd","text":"Power Muth Distribution shape parameter \\(\\alpha\\) scale parameter \\(\\beta\\) density given $$f\\left( x\\right) =\\frac{\\alpha }{\\beta ^\\alpha }x^{\\alpha -1} \\left( e^{\\left(x/\\beta \\right) ^{\\alpha }}-1\\right) \\left( e^{\\left( x/\\beta \\right)  ^{\\alpha }- \\left( e^{\\left( x/\\beta \\right) ^{\\alpha }}-1\\right) }\\right), $$ $$x>0,~\\alpha ,\\beta>0.$$","code":""},{"path":"https://akmn35.github.io/new.dist/reference/tpmd.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"The Power Muth Distribution — tpmd","text":"Hazard function; $$h\\left( \\beta ,\\alpha \\right) =\\frac{\\alpha }{\\beta ^{\\alpha }} \\left(e^{\\left( x/\\beta \\right) ^{\\alpha }}-1\\right) x^{\\alpha -1}$$","code":""},{"path":"https://akmn35.github.io/new.dist/reference/tpmd.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"The Power Muth Distribution — tpmd","text":"Jodra, P., Gomez, H. W., Jimenez-Gamero, M. D., & Alba-Fernandez, M. V. (2017). power Muth distribution . Mathematical Modelling Analysis, 22(2), 186-201.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/tpmd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Power Muth Distribution — tpmd","text":"","code":"library(new.dist) dtpmd(1, beta=2, alpha=3) #> [1] 0.04952547 ptpmd(1,beta=2,alpha=3) #> [1] 0.008115344 qtpmd(.5,beta=2,alpha=3) #> [1] 1.990084 rtpmd(10,beta=2,alpha=3) #>  [1] 2.158260 2.078985 2.076930 1.801033 1.402295 1.739124 1.548870 1.559018 #>  [9] 2.120148 2.084670"},{"path":"https://akmn35.github.io/new.dist/reference/tprd.html","id":null,"dir":"Reference","previous_headings":"","what":"Two-Parameter Rayleigh Distribution — tprd","title":"Two-Parameter Rayleigh Distribution — tprd","text":"Density, distribution function, quantile function random generation Two-Parameter Rayleigh  distribution parameters location scale.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/tprd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Two-Parameter Rayleigh Distribution — tprd","text":"","code":"dtprd(x, lambda = 1, mu, log = FALSE)  ptprd(q, lambda = 1, mu, lower.tail = TRUE, log.p = FALSE)  qtprd(p, lambda = 1, mu, lower.tail = TRUE)  rtprd(n, lambda = 1, mu)"},{"path":"https://akmn35.github.io/new.dist/reference/tprd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Two-Parameter Rayleigh Distribution — tprd","text":"x, q vector quantiles. lambda scale parameter. mu location parameter. log, log.p logical; TRUE, probabilities p given log(p). lower.tail logical; TRUE (default), probabilities \\(P\\left[ X\\leq x\\right]\\), otherwise,\\(P\\left[ X>x\\right] \\). p vector probabilities. n number observations. length(n) > 1, length taken number required.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/tprd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Two-Parameter Rayleigh Distribution — tprd","text":"dtprd gives density, ptprd gives distribution function, qtprd gives quantile function rtprd generates random deviates.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/tprd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Two-Parameter Rayleigh Distribution — tprd","text":"Two-Parameter Rayleigh distribution scale parameter \\(\\lambda\\) location parameter \\(\\mu\\), density given $$f\\left( x\\right) =2\\lambda \\left( x-\\mu \\right) e^{-\\lambda  \\left( x-\\mu\\right) ^{2}},$$ $$x>\\mu ,~\\lambda >0.$$","code":""},{"path":"https://akmn35.github.io/new.dist/reference/tprd.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Two-Parameter Rayleigh Distribution — tprd","text":"Dey, S., Dey, T. ve Kundu, D., 2014, Two-parameter Rayleigh distribution: different methods estimation, American Journal Mathematical Management Sciences, 33 (1), 55-74.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/tprd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Two-Parameter Rayleigh Distribution — tprd","text":"","code":"library(new.dist) dtprd(5, lambda=4, mu=4) #> [1] 0.1465251 ptprd(2,lambda=2,mu=1) #> [1] 0.8646647 qtprd(.5,lambda=2,mu=1) #> [1] 1.588705 rtprd(10,lambda=2,mu=1) #>  [1] 1.416017 1.932447 1.764349 2.063266 1.493904 2.101600 1.662273 1.735066 #>  [9] 1.086463 1.448911"},{"path":"https://akmn35.github.io/new.dist/reference/ugd.html","id":null,"dir":"Reference","previous_headings":"","what":"Uniform-Geometric distribution — ugd","title":"Uniform-Geometric distribution — ugd","text":"Density, distribution function, quantile function random generation Uniform-Geometric distributions parameter.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/ugd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Uniform-Geometric distribution — ugd","text":"","code":"dugd(x, theta, log = FALSE)  pugd(q, theta, lower.tail = TRUE, log.p = FALSE)  qugd(p, theta, lower.tail = TRUE)  rugd(n, theta)"},{"path":"https://akmn35.github.io/new.dist/reference/ugd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Uniform-Geometric distribution — ugd","text":"x, q vector quantiles. theta parameter. log, log.p logical; TRUE, probabilities p given log(p). lower.tail logical; TRUE (default), probabilities \\(P\\left[ X\\leq x\\right]\\), otherwise,\\(P\\left[ X>x\\right] \\). p vector probabilities. n number observations. length(n) > 1, length taken number required.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/ugd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Uniform-Geometric distribution — ugd","text":"dugd gives density, pugd gives distribution function, qugd gives quantile function rugd generates random deviates.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/ugd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Uniform-Geometric distribution — ugd","text":"Uniform-Geometric distribution shape parameter \\(\\theta\\), density given $$f\\left( x\\right) =\\theta \\left( 1-\\theta \\right) ^{x-1}LerchPhi \\left[ \\left(1-\\theta \\right) ,1,x\\right],$$ $$LerchPhi\\left( z,,v\\right) =\\sum_{n=0}^{\\infty }\\frac{z^{n}} {\\left(v+n\\right) ^{}}$$ $$x=1,2,...~,~~0<\\theta <1.$$","code":""},{"path":"https://akmn35.github.io/new.dist/reference/ugd.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Uniform-Geometric distribution — ugd","text":"Akdoğan, Y., Kuş, C., Asgharzadeh, ., Kınacı, İ., & Sharafi, F. (2016). Uniform-geometric distribution. Journal Statistical Computation Simulation, 86(9), 1754-1770.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/ugd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Uniform-Geometric distribution — ugd","text":"","code":"library(new.dist) dugd(1, theta=0.5) #> [1] 0.6931472 pugd(1,theta=.5) #> [1] 0.6931472 qugd(0.6,theta=.1) #> [1] 4 rugd(10,theta=.1) #>  [1]  2  1  7  2  1 12  1  4  1  1"},{"path":"https://akmn35.github.io/new.dist/reference/uigd.html","id":null,"dir":"Reference","previous_headings":"","what":"The unit inverse Gaussian distribution A new alternative to two parameter\ndistributions on the unit interval — uigd","title":"The unit inverse Gaussian distribution A new alternative to two parameter\ndistributions on the unit interval — uigd","text":"Density, distribution function, quantile function random generation unit inverse Gaussian distribution new alternative two parameter distribution parameters mean scale.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/uigd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The unit inverse Gaussian distribution A new alternative to two parameter\ndistributions on the unit interval — uigd","text":"","code":"duigd(x, mu, lambda = 1, log = FALSE)  puigd(q, mu, lambda = 1, lower.tail = TRUE, log.p = FALSE)  quigd(p, mu, lambda = 1, lower.tail = TRUE)  ruigd(n, mu, lambda = 1)"},{"path":"https://akmn35.github.io/new.dist/reference/uigd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The unit inverse Gaussian distribution A new alternative to two parameter\ndistributions on the unit interval — uigd","text":"x, q vector quantiles. mu mean parameter. lambda scale parameter. log, log.p logical; TRUE, probabilities p given log(p). lower.tail logical; TRUE (default), probabilities \\(P\\left[ X\\leq x\\right]\\), otherwise,\\(P\\left[ X>x\\right] \\). p vector probabilities. n number observations. length(n) > 1, length taken number required.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/uigd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The unit inverse Gaussian distribution A new alternative to two parameter\ndistributions on the unit interval — uigd","text":"duigd gives density, puigd gives distribution function, quigd gives quantile function ruigd generates random deviates.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/uigd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The unit inverse Gaussian distribution A new alternative to two parameter\ndistributions on the unit interval — uigd","text":"unit inverse Gaussian distribution new alternative two parameter distribution scale parameter \\(\\lambda\\) mean parameter \\(\\mu\\), density given $$f\\left( x\\right) =\\sqrt{\\frac{\\lambda }{2\\pi }} \\frac{1}{x^{3/2}}e^{-\\frac{ \\lambda }{2\\mu ^{2}x}\\left( x-\\mu \\right) ^{2}},$$ $$x>0,~\\mu ,\\lambda >0.$$","code":""},{"path":"https://akmn35.github.io/new.dist/reference/uigd.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"The unit inverse Gaussian distribution A new alternative to two parameter\ndistributions on the unit interval — uigd","text":"Ghitany, M., Mazucheli, J., Menezes, . ve Alqallaf, F., 2019, unit-inverse Gaussian distribution: new alternative two-parameter distributions unit interval, Communications Statistics-Theory Methods, 48 (14), 3423-3438.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/uigd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The unit inverse Gaussian distribution A new alternative to two parameter\ndistributions on the unit interval — uigd","text":"","code":"library(new.dist) duigd(1, mu=2, lambda=3) #> [1] 0.4749088 puigd(1,mu=2,lambda=3) #> [1] 0.2873867 quigd(.1,mu=2,lambda=3) #> [1] 0.6104128 ruigd(10,mu=2,lambda=3) #>  [1] 2.7305106 4.0584985 0.8323108 0.8683474 2.9750050 0.3638409 1.0493758 #>  [8] 2.9949889 7.4976427 5.4593666"},{"path":"https://akmn35.github.io/new.dist/reference/wgd.html","id":null,"dir":"Reference","previous_headings":"","what":"Weighted Geometric Distribution — wgd","title":"Weighted Geometric Distribution — wgd","text":"Density, distribution function, quantile function random generation Weighted Geometric distributions parameters.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/wgd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Weighted Geometric Distribution — wgd","text":"","code":"dwgd(x, alpha, lambda, log = FALSE)  pwgd(q, alpha, lambda, lower.tail = TRUE, log.p = FALSE)  qwgd(p, alpha, lambda, lower.tail = TRUE)  rwgd(n, alpha, lambda)"},{"path":"https://akmn35.github.io/new.dist/reference/wgd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Weighted Geometric Distribution — wgd","text":"x, q vector quantiles. alpha, lambda parameters. log, log.p logical; TRUE, probabilities p given log(p). lower.tail logical; TRUE (default), probabilities \\(P\\left[ X\\leq x\\right]\\), otherwise,\\(P\\left[ X>x\\right] \\). p vector probabilities. n number observations. length(n) > 1, length taken number required.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/wgd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Weighted Geometric Distribution — wgd","text":"dwgd gives density, pwgd gives distribution function, qwgd gives quantile function rwgd generates random deviates.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/wgd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Weighted Geometric Distribution — wgd","text":"Weighted Geometric distribution parameters \\(\\alpha\\) \\(\\lambda\\), density given $$f\\left( x\\right) =\\frac{\\left( 1-\\alpha \\right) \\left( 1-\\alpha ^{\\lambda+1}\\right) }{1-\\alpha ^{\\lambda }}\\alpha ^{x-1} \\left( 1-\\alpha ^{\\lambda x}\\right),$$ $$x\\\\mathbb {N} =1,2,...~,~\\lambda >0,~0<\\alpha <1.$$","code":""},{"path":"https://akmn35.github.io/new.dist/reference/wgd.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Weighted Geometric Distribution — wgd","text":"Najarzadegan, H., Alamatsaz, M. H., Kazemi, . ve Kundu, D., 2020, Weighted bivariate geometric distribution: Simulation estimation, Communications Statistics-Simulation Computation, 49 (9), 2419-2443.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/wgd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Weighted Geometric Distribution — wgd","text":"","code":"library(new.dist) dwgd(1,alpha=.2,lambda=3) #> [1] 0.79872 pwgd(1,alpha=.2,lambda=3) #> [1] 0.79872 qwgd(.98,alpha=.2,lambda=3) #> [1] 3 rwgd(10,alpha=.2,lambda=3) #>  [1] 1 1 3 1 1 1 1 1 1 1"},{"path":"https://akmn35.github.io/new.dist/news/index.html","id":"newdist-010","dir":"Changelog","previous_headings":"","what":"new.dist 0.1.0","title":"new.dist 0.1.0","text":"First public release.","code":""}]
