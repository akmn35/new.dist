[{"path":"https://akmn35.github.io/new.dist/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ramazan Akman. Maintainer, contributor.            https://www.researchgate.net/profile/Ramazan-Akman Coşkun Kuş. Author, contributor.            https://www.selcuk.edu.tr/Person/Detail/coskun Ihab Abusaif. Author, contributor.            https://www.researchgate.net/profile/Ihab-Abusaif","code":""},{"path":"https://akmn35.github.io/new.dist/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kuş C, Abusaif (2023). new.dist: Alternative Continuous Discrete Distributions. R package version 0.1.0, https://akmn35.github.io/new.dist/, https://github.com/akmn35/new.dist.","code":"@Manual{,   title = {new.dist: Alternative Continuous and Discrete Distributions},   author = {Coşkun Kuş and Ihab Abusaif},   year = {2023},   note = {R package version 0.1.0, https://akmn35.github.io/new.dist/},   url = {https://github.com/akmn35/new.dist}, }"},{"path":"https://akmn35.github.io/new.dist/index.html","id":"newdist","dir":"","previous_headings":"","what":"Alternative Continuous and Discrete Distributions","title":"Alternative Continuous and Discrete Distributions","text":"aim develop R package, new.dist package, probability (density) function, distribution function, quantile function associated random number generation function discrete continuous distributions, recently proposed literature. package implements following distributions: Power Muth Distribution, bimodal Weibull Distribution, Discrete Lindley Distribution 1, Discrete Lindley Distribution 2, Gamma-Lomax Distribution, Weighted Geometric Distribution, Power Log-Dagum Distribution, Kumaraswamy Distribution, Lindley Distribution, Ram Awadh distribution, Unit-Inverse Gaussian Distribution, EP Distribution, Akash Distribution, Ishita Distribution, Maxwell Distribution, Standard Omega Distribution, Slashed Generalized Rayleigh Distribution, Two-Parameter Rayleigh Distribution, Muth Distribution, Uniform-Geometric Distribution, Discrete Weibull Distribution.","code":""},{"path":"https://akmn35.github.io/new.dist/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Alternative Continuous and Discrete Distributions","text":"can install development version new.dist [GitHub][https://github.com/] :","code":"# install.packages(\"devtools\") devtools::install_github(\"akmn35/new.dist\")"},{"path":"https://akmn35.github.io/new.dist/index.html","id":"details","dir":"","previous_headings":"","what":"Details","title":"Alternative Continuous and Discrete Distributions","text":"new.dist Density, distribution function, quantile function random generation parameter estimation distributions.","code":""},{"path":"https://akmn35.github.io/new.dist/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Alternative Continuous and Discrete Distributions","text":"dbwd Density function Bimodal Weibull distribution shape (alpha) scale (beta) parameters. pbwd Distribution function Bimodal Weibull distribution shape (alpha) scale (beta) parameters. qbwd Quantile function Bimodal Weibull distribution shape (alpha) scale (beta) parameters. rbwd Random generation Bimodal Weibull distribution shape (alpha) scale (beta) parameters. dsgrd Density function Slashed Generalized Rayleigh distribution shape (alpha), scale (theta) kurtosis(beta) parameters. psgrd Distribution function Slashed Generalized Rayleigh distribution shape (alpha), scale (theta) kurtosis (beta) parameters. qsgrd Quantile function Slashed Generalized Rayleigh distribution shape (alpha), scale (theta) kurtosis (beta) parameters. rsgrd Random generation Slashed Generalized Rayleigh distribution shape (alpha), scale (theta) kurtosis (beta) parameters. dsod Density function Standard Omega distribution alpha beta parameters. psod Distribution function Standard Omega distribution alpha beta parameters. qsod Quantile function Standard Omega distribution alpha beta parameters. rsod Random generation Standard Omega distribution alpha beta parameters. dugd Density function Uniform-Geometric distribution theta parameter. pugd Distribution function Uniform-Geometric distribution theta parameter. qugd Quantile function Uniform-Geometric distribution theta parameter. rugd Random generation Uniform-Geometric distribution theta parameter. dtpmd Density function Power Muth distribution shape (beta) scale (alpha) parameters. ptpmd Distribution function Power Muth distribution shape (beta) scale (alpha) parameters. qtpmd Quantile function Power Muth distribution shape (beta) scale (alpha) parameters. rtpmd Random generation Power Muth distribution shape (beta) scale (alpha) parameters. dtprd Density function Two-Parameter Rayleigh distribution location (mu) scale (lambda) parameters. ptprd Distribution function Two-Parameter Rayleigh distribution location (mu) scale (lambda) parameters. qtprd Quantile function Two-Parameter Rayleigh distribution location (mu) scale (lambda) parameters. rtprd Random generation Two-Parameter Rayleigh distribution location (mu) scale (lambda) parameters. duigd Density function Unit Inverse Gaussian distribution mean (mu) scale (lambda) parameters. puigd Distribution function Unit Inverse Gaussian distribution mean (mu) scale (lambda) parameters. quigd Quantile function Unit Inverse Gaussian distribution mean (mu) scale (lambda) parameters. ruigd Random generation Unit Inverse Gaussian distribution mean (mu) scale (lambda) parameters. dwgd Density function Weighted Geometric distribution alpha lambda parameters. pwgd Distribution function Weighted Geometric distribution alpha lambda parameters. qwgd Quantile function Weighted Geometric distribution alpha lambda parameters. rwgd Random generation Weighted Geometric distribution alpha lambda parameters. ddLd1 Density function Discrete Lindley distribution 1 theta parameter. pdLd1 Distribution function Discrete Lindley distribution 1 theta parameter. qdLd1 Quantile function Discrete Lindley distribution 1 theta parameter. rdLd1 Random generation Discrete Lindley distribution 1 theta parameter. dmd Density function Maxwell distribution scale (theta) parameter. pmd Distribution function Maxwell distribution scale (theta) parameter. qmd Quantile function Maxwell distribution scale (theta) parameter. rmd Random generation Maxwell distribution scale (theta) parameter. dkd Density function Kumaraswamy distribution shape (alpha, lambda) parameters. pkd Distribution function Kumaraswamy distribution shape (alpha, lambda) parameters. qkd Quantile function Kumaraswamy distribution shape (alpha, lambda) parameters. rkd Random generation Kumaraswamy distribution shape (alpha, lambda) parameters. dgld Density function Gamma-Lomax distribution shape (, alpha) scale (beta) parameters. pgld Distribution function Gamma-Lomax distribution shape (, alpha) scale (beta) parameters. qgld Quantile function Gamma-Lomax distribution shape (, alpha) scale (beta) parameters. rgld Random generation Gamma-Lomax distribution shape (, alpha) scale (beta) parameters. ddLd2 Density function Discrete Lindley distribution 2 theta parameter. pdLd2 Distribution function Discrete Lindley distribution 2 theta parameter. qdLd2 Quantile function Discrete Lindley distribution 2 theta parameter. rdLd2 Random generation Discrete Lindley distribution 2 theta parameter. dEPd Density function EP distribution lambda beta parameters. pEPd Distribution function EP distribution lambda beta parameters. qEPd Quantile function EP distribution lambda beta parameters. rEPd Random generation EP distribution lambda beta parameters. dRA Density function Ram Awadh distribution scale (theta) parameter. pRA Distribution function Ram Awadh distribution scale (theta) parameter. qRA Quantile function Ram Awadh distribution scale (theta) parameter. rRA Random generation Ram Awadh distribution scale (theta) parameter. domd Density function Muth distribution alpha parameter. pomd Distribution function Muth distribution alpha parameter. qomd Quantile function Muth distribution alpha parameter. romd Random generation Muth distribution alpha parameter. dpldd Density function Power Log Dagum distribution alpha, beta theta parameters. ppldd Distribution function Power Log Dagum distribution alpha, beta theta parameters. qpldd Quantile function Power Log Dagum distribution alpha, beta theta parameters. rpldd Random generation Power Log Dagum distribution alpha, beta theta parameters. dLd Density function Lindley distribution theta parameter. pLd Distribution function Lindley distribution theta parameter. qLd Quantile function Lindley distribution theta parameter. rLd Random generation Lindley distribution theta parameter.","code":"library(new.dist) dbwd(1,alpha=2,beta=3,sigma=4) #> [1] 0.01594262 library(new.dist) pbwd(1,alpha=2,beta=3,sigma=4) #> [1] 0.003859685 library(new.dist) qbwd(.7,alpha=2,beta=3,sigma=4) #> [1] 4.759942 library(new.dist) rbwd(5,alpha=2,beta=3,sigma=4) #> [1] 3.664845 5.360822 2.990105 4.481485 5.048183 library(new.dist) dsgrd(2,theta=3,alpha=1,beta=4) #> [1] 0.08314235 library(new.dist) psgrd(5,theta=3,alpha=1,beta=4) #> [1] 0.9989333 library(new.dist) qsgrd(.4,theta=3,alpha=1,beta=4) #> [1] 0.8358487 library(new.dist) rsgrd(5,theta=3,alpha=1,beta=4) #> [1] 0.3863484 2.5092187 1.2686196 1.2403029 1.3235700 library(new.dist) dsod(0.4, alpha=1, beta=2) #> [1] 0.6986559 library(new.dist) psod(0.4, alpha=1, beta=2) #> [1] 0.1490371 library(new.dist) qsod(.8, alpha=1, beta=2) #> [1] 0.9607689 library(new.dist) rsod(5, alpha=1, beta=2) #> [1] 0.8427112 0.9129416 0.6219982 0.9100745 0.4723296 library(new.dist) dugd(1, theta=0.5) #> [1] 0.6931472 library(new.dist) pugd(1,theta=.5) #> [1] 0.6931472 library(new.dist) qugd(0.6,theta=.1) #> [1] 4 library(new.dist) rugd(5,theta=.1) #> [1]  1  1  5  1 31 library(new.dist) dtpmd(1, beta=2, alpha=3) #> [1] 0.04952547 library(new.dist) ptpmd(1,beta=2,alpha=3) #> [1] 0.008115344 library(new.dist) qtpmd(.5,beta=2,alpha=3) #> [1] 1.990084 library(new.dist) rtpmd(5,beta=2,alpha=3) #> [1] 1.756016 1.764679 2.056520 2.345543 1.742426 library(new.dist) dtprd(5, lambda=4, mu=4) #> [1] 0.1465251 library(new.dist) ptprd(2,lambda=2,mu=1) #> [1] 0.8646647 library(new.dist) qtprd(.5,lambda=2,mu=1) #> [1] 1.588705 library(new.dist) rtprd(5,lambda=2,mu=1) #> [1] 1.220879 1.372845 1.396953 1.186881 1.178497 library(new.dist) duigd(1, mu=2, lambda=3) #> [1] 0.4749088 library(new.dist) puigd(1,mu=2,lambda=3) #> [1] 0.2873867 library(new.dist) quigd(.1,mu=2,lambda=3) #> [1] 0.6104128 library(new.dist) ruigd(5,mu=2,lambda=3) #> [1] 1.1143091 1.9358974 0.9908742 1.9361458 4.1511506 library(new.dist) dwgd(1,alpha=.2,lambda=3) #> [1] 0.79872 library(new.dist) dwgd(1,alpha=.2,lambda=3) #> [1] 0.79872 library(new.dist) qwgd(.98,alpha=.2,lambda=3) #> [1] 3 library(new.dist) rwgd(5,alpha=.2,lambda=3) #> [1] 1 1 1 1 1 library(new.dist) ddLd1(1,theta=2) #> [1] 0.1828223 library(new.dist) ddLd1(1,theta=2) #> [1] 0.1828223 library(new.dist) qdLd1(.993,theta=2) #> [1] 3 library(new.dist) rdLd1(5,theta=1) #> [1] 0 3 0 1 0 library(new.dist) dmd(1,theta=2) #> [1] 0.4839414 library(new.dist) pmd(1,theta=2) #> [1] 0.198748 library(new.dist) qmd(.4,theta=5) #> [1] 2.161694 library(new.dist) rmd(5,theta=1) #> [1] 1.0089490 0.5365065 1.6936789 1.6637683 0.6974195 library(new.dist) dkd(0.1,lambda=2,alpha=3) #> [1] 0.58806 library(new.dist) dkd(0.1,lambda=2,alpha=3) #> [1] 0.58806 library(new.dist) pkd(0.5,lambda=2,alpha=3) #> [1] 0.578125 library(new.dist) rkd(5,lambda=2,alpha=3) #> [1] 0.3561777 0.8089768 0.5023644 0.5976999 0.2989784 library(new.dist) dgld(1,a=2,alpha=3,beta=4) #> [1] 0.2056491 library(new.dist) dgld(1,a=2,alpha=3,beta=4) #> [1] 0.2056491 library(new.dist) qgld(.8,a=2,alpha=3,beta=4) #> [1] 6.852518 library(new.dist) rgld(5,a=2,alpha=3,beta=4) #> [1]  2.059543  5.963640  7.954032 11.352291  4.832939 library(new.dist) ddLd2(2,theta=2) #> [1] 0.03530023 library(new.dist) pdLd2(1,theta=2) #> [1] 0.9572635 library(new.dist) qdLd2(.5,theta=2) #> [1] 0 library(new.dist) rdLd2(5,theta=1) #> [1] 0 1 1 0 0 library(new.dist) dEPd(1, lambda=2, beta=3) #> [1] 0.05165063 library(new.dist) pEPd(1, lambda=2, beta=3) #> [1] 0.9836125 library(new.dist) qEPd(.8,lambda=2,beta=3) #> [1] 0.295895 library(new.dist) rEPd(5,lambda=2,beta=3) #> [1] 0.07587301 0.24853086 0.15903216 0.01355832 1.18363532 library(new.dist) dRA(1,theta=2) #> [1] 0.1412194 library(new.dist) pRA(1,theta=2) #> [1] 0.3115553 library(new.dist) dRA(.8,theta=2) #> [1] 0.163461 library(new.dist) rRA(5,theta=2) #> [1] 1.024437 3.727622 2.863204 2.677814 3.019885 library(new.dist) domd(1,alpha=.2) #> [1] 0.4123689 library(new.dist) pomd(1,alpha=.2) #> [1] 0.596272 library(new.dist) qomd(.8,alpha=.2) #> [1] 1.637047 library(new.dist) romd(5,alpha=.2) #> [1] 0.4886359 2.1506724 0.3837403 1.4267883 1.8242038 library(new.dist) dpldd(1, alpha=2, beta=3, theta=4) #> [1] 0.1766842 library(new.dist) ppldd(1, alpha=2, beta=3, theta=4) #> [1] 0.9742603 library(new.dist) qpldd(.8, alpha=2, beta=3, theta=4) #> [1] 0.6109249 library(new.dist) rpldd(5, alpha=2, beta=3, theta=4) #> [1]  0.20437978  0.13255536 -0.06912443  0.29303026  0.33152951 library(new.dist) dLd(1,theta=2) #> [1] 0.3608941 library(new.dist) pLd(1,theta=2) #> [1] 0.7744412 library(new.dist) qLd(.5,theta=2) #> [1] 0.4872058 library(new.dist) rLd(5,theta=1) #> [1] 0.9922135 1.8368468 0.1235970 4.9254887 1.8944292"},{"path":"https://akmn35.github.io/new.dist/index.html","id":"corresponding-author","dir":"","previous_headings":"","what":"Corresponding Author","title":"Alternative Continuous and Discrete Distributions","text":"Department Statistics, Faculty Science, Selcuk University, 42250, Konya, Turkey  Email:coskun@selcuk.edu.tr","code":""},{"path":"https://akmn35.github.io/new.dist/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Alternative Continuous and Discrete Distributions","text":"Akdoğan, Y., Kuş, C., Asgharzadeh, ., Kınacı, İ., & Sharafi, F. (2016). Uniform-geometric distribution. Journal Statistical Computation Simulation, 86(9), 1754-1770. Akgül, F. G., Acıtaş, Ş. ve Şenoğlu, B., 2018, Inferences stress–strength reliability based ranked set sampling data case Lindley distribution, Journal statistical computation simulation, 88 (15), 3018-3032. Bakouch, H. S., Khan, M. N., Hussain, T. ve Chesneau, C., 2019, power log-Dagum distribution: estimation applications, Journal Applied Statistics, 46 (5), 874-892. Bakouch, H. S., Jazi, M. . ve Nadarajah, S., 2014, new discrete distribution, Statistics, 48 (1), 200-240. Birbiçer, İ. ve Genç, . İ., 2022, parameter estimation standard omega distribution. Journal Applied Statistics, 1-17. Cordeiro, G. M., Ortega, E. M. ve Popović, B. V., 2015, gamma-Lomax distribution, Journal statistical computation simulation, 85 (2), 305-319. Dey, S., Dey, T. ve Kundu, D., 2014, Two-parameter Rayleigh distribution: different methods estimation, American Journal Mathematical Management Sciences, 33 (1), 55-74. Ghitany, M., Mazucheli, J., Menezes, . ve Alqallaf, F., 2019, unit-inverse Gaussian distribution: new alternative two-parameter distributions unit interval, Communications Statistics-Theory Methods, 48 (14), 3423-3438. Gómez-Déniz, E. ve Calderín-Ojeda, E., 2011, discrete Lindley distribution: properties applications.Journal statistical computation simulation, 81 (11), 1405-1416. Iriarte, Y. ., Vilca, F., Varela, H. ve Gómez, H. W., 2017, Slashed generalized Rayleigh distribution, Communications Statistics-Theory Methods, 46 (10), 4686-4699. Jodra, P., Gomez, H. W., Jimenez-Gamero, M. D., & Alba-Fernandez, M. V. (2017). power Muth distribution . Mathematical Modelling Analysis, 22(2), 186-201. Jodrá, P., Jiménez-Gamero, M. D. ve Alba-Fernández, M. V., 2015, Muth distribution, Mathematical Modelling Analysis, 20 (3), 291-310. Kohansal, . ve Bakouch, H. S., 2021, Estimation procedures Kumaraswamy distribution parameters adaptive type-II hybrid progressive censoring, Communications Statistics-Simulation Computation, 50 (12), 4059-4078. Krishna, H., Vivekanand ve Kumar, K., 2015, Estimation Maxwell distribution randomly censored data, Journal statistical computation simulation, 85 (17), 3560-3578. Kuş, C., 2007, new lifetime distribution, Computational Statistics & Data Analysis, 51 (9), 4497-4509. Najarzadegan, H., Alamatsaz, M. H., Kazemi, . ve Kundu, D., 2020, Weighted bivariate geometric distribution: Simulation estimation, Communications Statistics-Simulation Computation, 49 (9), 2419-2443. Ristić, M. M., & Balakrishnan, N. (2012), gamma-exponentiated exponential distribution. Journal statistical computation simulation, 82(8), 1191-1206. Shukla, K. K., Shanker, R. ve Tiwari, M. K., 2022, new one parameter discrete distribution applications, Journal Statistics Management Systems, 25 (1), 269-283. Vila, R. ve Niyazi Çankaya, M., 2022, bimodal Weibull distribution: properties inference,Journal Applied Statistics, 49 (12), 3044-3062.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/EPd.html","id":null,"dir":"Reference","previous_headings":"","what":"EP distribution — EPd","title":"EP distribution — EPd","text":"Density, distribution function, quantile function random generation EP distribution.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/EPd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EP distribution — EPd","text":"","code":"dEPd(x, lambda, beta, log = FALSE)  pEPd(q, lambda, beta, lower.tail = TRUE, log.p = FALSE)  qEPd(p, lambda, beta, lower.tail = TRUE)  rEPd(n, lambda, beta)"},{"path":"https://akmn35.github.io/new.dist/reference/EPd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"EP distribution — EPd","text":"x, q vector quantiles. lambda, beta parameters. log, log.p logical; TRUE, probabilities p given log(p). lower.tail logical; TRUE (default), probabilities \\(P\\left[ X\\leq x\\right]\\), otherwise, \\(P\\left[ X>x\\right] \\). p vector probabilities. n number observations. length(n) > 1, length taken number required.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/EPd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"EP distribution — EPd","text":"dEPd gives density, pEPd gives distribution function, qEPd gives quantile function rEPd generates random deviates.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/EPd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"EP distribution — EPd","text":"EP distribution parameters \\(\\lambda\\) \\(\\beta\\), density $$f\\left( x\\right) =\\frac{\\lambda \\beta } {\\left( 1-e^{-\\lambda }\\right) } e^{-\\lambda -\\beta x+\\lambda e^{-\\beta x}},$$ $$x>\\mathbb{R}_{+},~\\beta ,\\lambda \\\\mathbb{R}_{+}.$$","code":""},{"path":"https://akmn35.github.io/new.dist/reference/EPd.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"EP distribution — EPd","text":"Kuş, C., 2007, new lifetime distribution, Computational Statistics & Data Analysis, 51 (9), 4497-4509.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/EPd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"EP distribution — EPd","text":"","code":"library(new.dist) dEPd(1, lambda=2, beta=3) #> [1] 0.05165063 pEPd(1,lambda=2,beta=3) #> [1] 0.9836125 qEPd(.8,lambda=2,beta=3) #> [1] 0.295895 rEPd(10,lambda=2,beta=3) #>  [1] 0.16527048 0.03368801 0.01542696 1.20727985 0.07436072 1.78878170 #>  [7] 0.17704497 0.00811571 0.12937460 0.04402648"},{"path":"https://akmn35.github.io/new.dist/reference/Ld.html","id":null,"dir":"Reference","previous_headings":"","what":"Lindley Distribution — Ld","title":"Lindley Distribution — Ld","text":"Density, distribution function, quantile function random generation Lindley distribution.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/Ld.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lindley Distribution — Ld","text":"","code":"dLd(x, theta, log = FALSE)  pLd(q, theta, lower.tail = TRUE, log.p = FALSE)  qLd(p, theta, lower.tail = TRUE)  rLd(n, theta)"},{"path":"https://akmn35.github.io/new.dist/reference/Ld.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lindley Distribution — Ld","text":"x, q vector quantiles. theta parameter. log, log.p logical; TRUE, probabilities p given log(p). lower.tail logical; TRUE (default), probabilities \\(P\\left[ X\\leq x\\right]\\), otherwise, \\(P\\left[ X>x\\right] \\). p vector probabilities. n number observations. length(n) > 1, length taken number required.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/Ld.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lindley Distribution — Ld","text":"dLd gives density, pLd gives distribution function, qLd gives quantile function rLd generates random deviates.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/Ld.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Lindley Distribution — Ld","text":"Lindley distribution parameter \\(\\theta\\), density $$f\\left( x\\right) =\\frac{\\theta ^{2}}{1+\\theta }\\left( 1+x\\right) e^{-\\theta~x},$$ $$x>0,~\\theta >0.$$","code":""},{"path":"https://akmn35.github.io/new.dist/reference/Ld.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Lindley Distribution — Ld","text":"Akgül, F. G., Acıtaş, Ş. ve Şenoğlu, B., 2018, Inferences stress–strength reliability based ranked set sampling data case Lindley distribution, Journal statistical computation simulation, 88 (15), 3018-3032.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/Ld.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lindley Distribution — Ld","text":"","code":"library(new.dist) dLd(1,theta=2) #> [1] 0.3608941 pLd(1,theta=2) #> [1] 0.7744412 qLd(.8,theta=1) #> [1] 2.397276 rLd(10,theta=1) #>  [1] 0.5157180 1.0323798 2.4057463 0.2751772 2.9039614 0.3625619 1.8704603 #>  [8] 3.3707877 1.2186231 1.1284899"},{"path":"https://akmn35.github.io/new.dist/reference/RA.html","id":null,"dir":"Reference","previous_headings":"","what":"Ram Awadh Distribution — RA","title":"Ram Awadh Distribution — RA","text":"Density, distribution function, quantile function random generation Ram Awadh distribution parameter scale.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/RA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ram Awadh Distribution — RA","text":"","code":"dRA(x, theta = 1, log = FALSE)  pRA(q, theta = 1, lower.tail = TRUE, log.p = FALSE)  qRA(p, theta = 1, lower.tail = TRUE)  rRA(n, theta = 1)"},{"path":"https://akmn35.github.io/new.dist/reference/RA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ram Awadh Distribution — RA","text":"x, q vector quantiles. theta scale parameter. log, log.p logical; TRUE, probabilities p given log(p). lower.tail logical; TRUE (default), probabilities \\(P\\left[ X\\leq x\\right]\\), otherwise, \\(P\\left[ X>x\\right] \\). p vector probabilities. n number observations. length(n) > 1, length taken number required.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/RA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ram Awadh Distribution — RA","text":"dnoPDD gives density, pnoPDD gives distribution function, qnoPDD gives quantile function rnoPDD generates random deviates.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/RA.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Ram Awadh Distribution — RA","text":"Ram Awadh distribution scale parameter \\(\\theta\\), density $$f\\left( x\\right) =\\frac{\\theta ^{6}}{\\theta ^{6}+120}  \\left( \\theta+x^{5}\\right) e^{-\\theta x},$$ $$x>0,~\\theta >0.$$","code":""},{"path":"https://akmn35.github.io/new.dist/reference/RA.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Ram Awadh Distribution — RA","text":"Shukla, K. K., Shanker, R. ve Tiwari, M. K., 2022, new one parameter discrete distribution applications, Journal Statistics Management Systems, 25 (1), 269-283.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/RA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ram Awadh Distribution — RA","text":"","code":"library(new.dist) dRA(1,theta=2) #> [1] 0.1412194 pRA(1,theta=2) #> [1] 0.3115553 qRA(.1,theta=1) #> [1] 3.086421 rRA(10,theta=1) #>  [1] 6.969605 4.667754 6.189345 5.475579 6.493121 9.525797 2.577059 7.044153 #>  [9] 8.899061 2.170998"},{"path":"https://akmn35.github.io/new.dist/reference/bwd.html","id":null,"dir":"Reference","previous_headings":"","what":"Bimodal Weibull Distribution — bwd","title":"Bimodal Weibull Distribution — bwd","text":"Density, distribution function, quantile function random generation Bimodal Weibull distribution parameters shape scale.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/bwd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bimodal Weibull Distribution — bwd","text":"","code":"dbwd(x, alpha, beta = 1, sigma, log = FALSE)  pbwd(q, alpha, beta = 1, sigma, lower.tail = TRUE, log.p = FALSE)  qbwd(p, alpha, beta = 1, sigma, lower.tail = TRUE)  rbwd(n, alpha, beta = 1, sigma)"},{"path":"https://akmn35.github.io/new.dist/reference/bwd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bimodal Weibull Distribution — bwd","text":"x, q vector quantiles. alpha shape parameter. beta scale parameter. sigma control parameter controls uni- bimodality distribution. log, log.p logical; TRUE, probabilities p given log(p). lower.tail logical; TRUE (default), probabilities \\(P\\left[ X\\leq x\\right]\\), otherwise, \\(P\\left[ X>x\\right] \\). p vector probabilities. n number observations. length(n) > 1, length taken number required.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/bwd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bimodal Weibull Distribution — bwd","text":"dbwd gives density, pbwd gives distribution function, qbwd gives quantile function rbwd generates random deviates.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/bwd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bimodal Weibull Distribution — bwd","text":"Bimodal Weibull distribution shape parameter \\(\\alpha\\), scale parameter \\(\\beta\\),control parameter \\(\\sigma\\) determines uni- bimodality distribution, density $$f\\left( x\\right) =\\frac{\\alpha }{\\beta Z_{\\theta }} \\left[ 1+\\left( 1-\\sigma~x\\right) ^{2}\\right] \\left( \\frac{x}{\\beta } \\right) ^{\\alpha -1}\\exp \\left( -\\left( \\frac{x}{\\beta }\\right) ^{\\alpha } \\right),$$ $$Z_{\\theta }=2+\\sigma ^{2}\\beta ^{2}\\Gamma \\left( 1+\\left( 2/\\alpha \\right)\\right) -2\\sigma \\beta \\Gamma \\left( 1+\\left( 1/\\alpha \\right) \\right) $$ $$x\\geq 0,~\\alpha ,\\beta >0~ ~\\sigma \\\\mathbb{R}.$$","code":""},{"path":"https://akmn35.github.io/new.dist/reference/bwd.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Bimodal Weibull Distribution — bwd","text":"Vila, R. ve Niyazi Çankaya, M., 2022, bimodal Weibull distribution: properties inference, Journal Applied Statistics, 49 (12), 3044-3062.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/bwd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bimodal Weibull Distribution — bwd","text":"","code":"library(new.dist) dbwd(1,alpha=2,beta=3,sigma=4) #> [1] 0.01594262 pbwd(1,alpha=2,beta=3,sigma=4) #> [1] 0.003859685 qbwd(.7,alpha=2,beta=3,sigma=4) #> [1] 4.759942 rbwd(10,alpha=2,beta=3,sigma=4) #>  [1] 7.827657 3.923226 4.900886 5.738928 3.587655 2.094304 4.985459 3.887030 #>  [9] 4.566250 2.436860"},{"path":"https://akmn35.github.io/new.dist/reference/dLd1.html","id":null,"dir":"Reference","previous_headings":"","what":"Discrete Lindley Distribution — dLd1","title":"Discrete Lindley Distribution — dLd1","text":"Density, distribution function, quantile function random generation discrete Lindley distribution.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/dLd1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Discrete Lindley Distribution — dLd1","text":"","code":"ddLd1(x, theta, log = FALSE)  pdLd1(q, theta, lower.tail = TRUE, log.p = FALSE)  qdLd1(p, theta, lower.tail = TRUE)  rdLd1(n, theta)"},{"path":"https://akmn35.github.io/new.dist/reference/dLd1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Discrete Lindley Distribution — dLd1","text":"x, q vector quantiles. theta parameter. log, log.p logical; TRUE, probabilities p given log(p). lower.tail logical; TRUE (default), probabilities \\(P\\left[ X\\leq x\\right]\\), otherwise, \\(P\\left[ X>x\\right] \\). p vector probabilities. n number observations. length(n) > 1, length taken number required.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/dLd1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Discrete Lindley Distribution — dLd1","text":"ddLd1 gives density, pdLd1 gives distribution function, qdLd1 gives quantile function rdLd1 generates random deviates.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/dLd1.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Discrete Lindley Distribution — dLd1","text":"Discrete Lindley distribution parameter \\(\\theta\\), density $$f\\left( x\\right) =\\frac{\\lambda ^{x}}{1-\\log \\lambda } \\left( \\lambda \\log\\lambda +\\left( 1-\\lambda \\right) \\left( 1-\\log \\lambda^{x+1}\\right)\\right), $$ $$x=0,1,...,~\\theta >0~~\\lambda =e^{-\\theta }.$$","code":""},{"path":"https://akmn35.github.io/new.dist/reference/dLd1.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Discrete Lindley Distribution — dLd1","text":"Gómez-Déniz, E. ve Calderín-Ojeda, E., 2011, discrete Lindley distribution: properties applications.Journal statistical computation simulation, 81 (11), 1405-1416.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/dLd1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Discrete Lindley Distribution — dLd1","text":"","code":"library(new.dist) ddLd1(1,theta=2) #> [1] 0.1828223 pdLd1(2,theta=1) #> [1] 0.8755323 qdLd1(.993,theta=2) #> [1] 3 rdLd1(10,theta=1) #>  [1] 0 5 0 0 0 1 1 1 2 4"},{"path":"https://akmn35.github.io/new.dist/reference/dLd2.html","id":null,"dir":"Reference","previous_headings":"","what":"Discrete Lindley Distribution — dLd2","title":"Discrete Lindley Distribution — dLd2","text":"Density, distribution function, quantile function random generation discrete Lindley distribution.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/dLd2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Discrete Lindley Distribution — dLd2","text":"","code":"ddLd2(x, theta, log = FALSE)  pdLd2(q, theta, lower.tail = TRUE, log.p = FALSE)  qdLd2(p, theta, lower.tail = TRUE)  rdLd2(n, theta)"},{"path":"https://akmn35.github.io/new.dist/reference/dLd2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Discrete Lindley Distribution — dLd2","text":"x, q vector quantiles. theta parameter. log, log.p logical; TRUE, probabilities p given log(p). lower.tail logical; TRUE (default), probabilities \\(P\\left[ X\\leq x\\right]\\), otherwise, \\(P\\left[ X>x\\right] \\). p vector probabilities. n number observations. length(n) > 1, length taken number required.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/dLd2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Discrete Lindley Distribution — dLd2","text":"ddLd2 gives density, pdLd2 gives distribution function, qdLd2 gives quantile function rdLd2 generates random deviates.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/dLd2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Discrete Lindley Distribution — dLd2","text":"discrete Lindley distribution parameter \\(\\theta\\), density $$f\\left( x\\right) =\\frac{\\lambda ^{x}}{1+\\theta }  \\left( \\theta \\left(1-2\\lambda \\right) +\\left( 1-\\lambda \\right)  \\left( 1+\\theta x\\right)\\right),$$ $$x=0,1,2,...~,\\lambda =\\exp \\left( -\\theta \\right) ~~\\theta >0.$$","code":""},{"path":"https://akmn35.github.io/new.dist/reference/dLd2.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Discrete Lindley Distribution — dLd2","text":"Bakouch, H. S., Jazi, M. . ve Nadarajah, S., 2014, new discrete distribution, Statistics, 48 (1), 200-240.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/dLd2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Discrete Lindley Distribution — dLd2","text":"","code":"library(new.dist) ddLd2(2,theta=2) #> [1] 0.03530023 pdLd2(1,theta=2) #> [1] 0.9572635 qdLd2(.5,theta=2) #> [1] 0 rdLd2(10,theta=1) #>  [1] 1 1 0 1 1 0 2 0 2 0"},{"path":"https://akmn35.github.io/new.dist/reference/gld.html","id":null,"dir":"Reference","previous_headings":"","what":"Gamma-Lomax Distribution — gld","title":"Gamma-Lomax Distribution — gld","text":"Density, distribution function, quantile function random generation gamma-Lomax distribution parameters shapes scale.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/gld.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gamma-Lomax Distribution — gld","text":"","code":"dgld(x, a, alpha, beta = 1, log = FALSE)  pgld(q, a, alpha, beta = 1, lower.tail = TRUE, log.p = FALSE)  qgld(p, a, alpha, beta = 1, lower.tail = TRUE)  rgld(n, a, alpha, beta = 1)"},{"path":"https://akmn35.github.io/new.dist/reference/gld.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gamma-Lomax Distribution — gld","text":"x, q vector quantiles. , alpha shape parameters. beta scale parameter. log, log.p logical; TRUE, probabilities p given log(p). lower.tail logical; TRUE (default), probabilities \\(P\\left[ X\\leq x\\right]\\), otherwise, \\(P\\left[ X>x\\right] \\). p vector probabilities. n number observations. length(n) > 1, length taken number required.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/gld.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gamma-Lomax Distribution — gld","text":"dgld gives density, pgld gives distribution function, qgld gives quantile function rgld generates random deviates.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/gld.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Gamma-Lomax Distribution — gld","text":"Gamma-Lomax distribution shape parameters \\(\\) \\(\\alpha\\), scale parameter \\(\\beta\\), density $$f\\left( x\\right) =\\frac{\\alpha \\beta ^{\\alpha }} {\\Gamma \\left( \\right)\\left( \\beta +x\\right) ^{\\alpha +1}}\\left\\{ -\\alpha \\log \\left( \\frac{\\beta }{\\beta +x}\\right) \\right\\} ^{-1},$$ $$x>0,~,\\alpha ,\\beta >0.$$","code":""},{"path":"https://akmn35.github.io/new.dist/reference/gld.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Gamma-Lomax Distribution — gld","text":"Cordeiro, G. M., Ortega, E. M. ve Popović, B. V., 2015, gamma-Lomax distribution, Journal statistical computation simulation, 85 (2), 305-319. Ristić, M. M., & Balakrishnan, N. (2012), gamma-exponentiated exponential distribution. Journal statistical computation simulation , 82(8), 1191-1206.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/gld.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gamma-Lomax Distribution — gld","text":"","code":"library(new.dist) dgld(1, a=2, alpha=3, beta=4) #> [1] 0.2056491 pgld(1, a=2,alpha=3,beta=4) #> [1] 0.1452515 qgld(.8, a=2,alpha=3,beta=4) #> [1] 6.852518 rgld(10, a=2,alpha=3,beta=4) #>  [1] 5.8358744 3.1366844 0.9344785 2.3633065 2.4776872 5.4892406 0.8456452 #>  [8] 2.9209766 4.0095059 9.1194377"},{"path":"https://akmn35.github.io/new.dist/reference/kd.html","id":null,"dir":"Reference","previous_headings":"","what":"Kumaraswamy Distribution — kd","title":"Kumaraswamy Distribution — kd","text":"Density, distribution function, quantile function random generation Kumaraswamy distribution shape parameters.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/kd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Kumaraswamy Distribution — kd","text":"","code":"dkd(x, lambda, alpha, log = FALSE)  pkd(q, lambda, alpha, lower.tail = TRUE, log.p = FALSE)  qkd(p, lambda, alpha, lower.tail = TRUE)  rkd(n, lambda, alpha)"},{"path":"https://akmn35.github.io/new.dist/reference/kd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Kumaraswamy Distribution — kd","text":"x, q vector quantiles. alpha, lambda non-negative shape parameters. log, log.p logical; TRUE, probabilities p given log(p). lower.tail logical; TRUE (default), probabilities \\(P\\left[ X\\leq x\\right]\\), otherwise, \\(P\\left[ X>x\\right] \\). p vector probabilities. n number observations. length(n) > 1, length taken number required.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/kd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Kumaraswamy Distribution — kd","text":"dkd gives density, pkd gives distribution function, qkd gives quantile function rkd generates random deviates.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/kd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Kumaraswamy Distribution — kd","text":"Kumaraswamy distribution non-negative shape parameters \\(\\alpha\\) \\(\\lambda\\) density $$f\\left( x\\right) =\\alpha \\lambda x^{\\lambda -1}\\left( 1-x^{\\lambda } \\right)^{\\alpha -1},$$ $$0<x<1,~~\\alpha ,\\lambda >0.$$","code":""},{"path":"https://akmn35.github.io/new.dist/reference/kd.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Kumaraswamy Distribution — kd","text":"Kohansal, . ve Bakouch, H. S., 2021, Estimation procedures Kumaraswamy distribution parameters adaptive type-II hybrid progressive censoring, Communications Statistics-Simulation Computation, 50 (12), 4059-4078.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/kd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Kumaraswamy Distribution — kd","text":"","code":"library(\"new.dist\") dkd(0.1,lambda=2,alpha=3) #> [1] 0.58806 pkd(0.5,lambda=2,alpha=3) #> [1] 0.578125 qkd(.8,lambda=2,alpha=3) #> [1] 0.6443574 rkd(10,lambda=2,alpha=3) #>  [1] 0.1839128 0.4083091 0.4758451 0.4759989 0.6231961 0.5361199 0.3242690 #>  [8] 0.6208538 0.5387407 0.8315172"},{"path":"https://akmn35.github.io/new.dist/reference/md.html","id":null,"dir":"Reference","previous_headings":"","what":"Maxwell Distribution — md","title":"Maxwell Distribution — md","text":"Density, distribution function, quantile function random generation Maxwell distribution parameter scale.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/md.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Maxwell Distribution — md","text":"","code":"dmd(x, theta = 1, log = FALSE)  pmd(q, theta = 1, lower.tail = TRUE, log.p = FALSE)  qmd(p, theta = 1, lower.tail = TRUE)  rmd(n, theta = 1)"},{"path":"https://akmn35.github.io/new.dist/reference/md.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Maxwell Distribution — md","text":"x, q vector quantiles. theta scale parameter. log, log.p logical; TRUE, probabilities p given log(p). lower.tail logical; TRUE (default), probabilities \\(P\\left[ X\\leq x\\right]\\), otherwise, \\(P\\left[ X>x\\right] \\). p vector probabilities. n number observations. length(n) > 1, length taken number required.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/md.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Maxwell Distribution — md","text":"dmd gives density, pmd gives distribution function, qmd gives quantile function rmd generates random deviates.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/md.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Maxwell Distribution — md","text":"Maxwell distribution scale parameter \\(\\theta\\), density $$f\\left( x\\right) =\\frac{4}{\\sqrt{\\pi }} \\frac{1}{\\theta ^{3/2}}x^{2}e^{-x^{2}/\\theta },$$ $$0\\leq x<\\infty ,~~\\theta >0.$$","code":""},{"path":"https://akmn35.github.io/new.dist/reference/md.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Maxwell Distribution — md","text":"Krishna, H., Vivekanand ve Kumar, K., 2015, Estimation Maxwell distribution randomly censored data, Journal statistical computation simulation, 85 (17), 3560-3578.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/md.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Maxwell Distribution — md","text":"","code":"library(new.dist) dmd(1,theta=2) #> [1] 0.4839414 pmd(1,theta=2) #> [1] 0.198748 qmd(.4,theta=5) #> [1] 2.161694 rmd(10,theta=1) #>  [1] 1.9872968 1.3905630 1.4121629 1.0946895 0.8665266 0.5837561 0.4356741 #>  [8] 1.1863326 1.1092076 1.8822235"},{"path":"https://akmn35.github.io/new.dist/reference/omd.html","id":null,"dir":"Reference","previous_headings":"","what":"Muth Distribution — omd","title":"Muth Distribution — omd","text":"Density, distribution function, quantile function random generation Muth distribution.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/omd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Muth Distribution — omd","text":"","code":"domd(x, alpha, log = FALSE)  pomd(q, alpha, lower.tail = TRUE, log.p = FALSE)  qomd(p, alpha, lower.tail = TRUE)  romd(n, alpha)"},{"path":"https://akmn35.github.io/new.dist/reference/omd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Muth Distribution — omd","text":"x, q vector quantiles. alpha parameter. log, log.p logical; TRUE, probabilities p given log(p). lower.tail logical; TRUE (default), probabilities \\(P\\left[ X\\leq x\\right]\\), otherwise, \\(P\\left[ X>x\\right] \\). p vector probabilities. n number observations. length(n) > 1, length taken number required.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/omd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Muth Distribution — omd","text":"domd gives density, pomd gives distribution function, qomd gives quantile function romd generates random deviates.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/omd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Muth Distribution — omd","text":"Muth distribution parameter \\(\\alpha\\), density $$f\\left( x\\right) =\\left( e^{\\alpha x}- \\alpha \\right) e^{\\alpha x-\\left(1/\\alpha \\right) \\left( e^{\\alpha x}- 1\\right) },$$ $$x>0,~\\alpha \\\\left( 0,1\\right]. $$","code":""},{"path":"https://akmn35.github.io/new.dist/reference/omd.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Muth Distribution — omd","text":"Jodrá, P., Jiménez-Gamero, M. D. ve Alba-Fernández, M. V., 2015, Muth distribution, Mathematical Modelling Analysis, 20 (3), 291-310.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/omd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Muth Distribution — omd","text":"","code":"library(new.dist) domd(1,alpha=.2) #> [1] 0.4123689 pomd(1,alpha=.2) #> [1] 0.596272 qomd(.8,alpha=.1) #> [1] 1.631923 romd(10,alpha=1) #>  [1] 0.6012192 1.2493990 0.3094967 1.3796262 1.2693331 1.2547300 1.7082540 #>  [8] 1.0160208 0.7095386 0.7687367"},{"path":"https://akmn35.github.io/new.dist/reference/pldd.html","id":null,"dir":"Reference","previous_headings":"","what":"Power Log Dagum Distribution — pldd","title":"Power Log Dagum Distribution — pldd","text":"Density, distribution function, quantile function random generation Power Log Dagum distribution.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/pldd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Power Log Dagum Distribution — pldd","text":"","code":"dpldd(x, alpha, beta, theta, log = FALSE)  ppldd(q, alpha, beta, theta, lower.tail = TRUE, log.p = FALSE)  qpldd(p, alpha, beta, theta, lower.tail = TRUE)  rpldd(n, alpha, beta, theta)"},{"path":"https://akmn35.github.io/new.dist/reference/pldd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Power Log Dagum Distribution — pldd","text":"x, q vector quantiles. alpha, beta, theta parameters. log, log.p logical; TRUE, probabilities p given log(p). lower.tail logical; TRUE (default), probabilities \\(P\\left[ X\\leq x\\right]\\), otherwise, \\(P\\left[ X>x\\right] \\). p vector probabilities. n number observations. length(n) > 1, length taken number required.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/pldd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Power Log Dagum Distribution — pldd","text":"dpldd gives density, ppldd gives distribution function, qpldd gives quantile function rpldd generates random deviates.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/pldd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Power Log Dagum Distribution — pldd","text":"Power Log Dagum Distribution parameters \\(\\alpha\\), \\(\\beta\\) \\(\\theta\\), density $$f\\left( x\\right) =\\alpha  \\left( \\beta +\\theta \\left\\vert x\\right\\vert^{\\beta -1}  \\right) e^{-\\left( \\beta x+sign\\left( x\\right)  \\left( \\theta/\\beta \\right) \\left\\vert    x\\right\\vert ^{\\beta }\\right) ~}~\\left(1+e^{-\\left( \\beta x+sign    \\left( x\\right)\\left( \\theta /\\beta \\right)    \\left\\vert x\\right\\vert ^{\\beta }\\right) }    \\right) ^{-\\left( \\alpha +1\\right)},$$ $$x\\\\mathbb{R},~\\beta \\\\mathbb{R},~\\alpha >0~~\\theta \\geq 0$$","code":""},{"path":"https://akmn35.github.io/new.dist/reference/pldd.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Power Log Dagum Distribution — pldd","text":"distributions hazard function $$h\\left( x\\right) =\\frac{\\alpha \\left( \\beta +\\theta \\left\\vert x\\right\\vert^{\\beta -1} \\right) e^{-\\left( \\beta x+sign\\left( x\\right) \\left( \\theta/\\beta \\right) \\left\\vert x\\right\\vert ^{\\beta }\\right) }\\left( 1+e^{-\\left(\\beta x+sign \\left( x\\right) \\left( \\theta /\\beta \\right) \\left\\vert x \\right\\vert ^{\\beta }\\right) }\\right) ^{-\\left(\\alpha +1\\right) }}         {1-\\left( 1+e^{-\\left( \\beta x+sign\\left( x\\right) \\left( \\theta / \\beta \\right) \\left\\vert x\\right\\vert ^{\\beta }\\right) } \\right) ^{-\\alpha }} .$$","code":""},{"path":"https://akmn35.github.io/new.dist/reference/pldd.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Power Log Dagum Distribution — pldd","text":"Bakouch, H. S., Khan, M. N., Hussain, T. ve Chesneau, C., 2019, power log-Dagum distribution: estimation applications, Journal Applied Statistics, 46 (5), 874-892.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/pldd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Power Log Dagum Distribution — pldd","text":"","code":"library(new.dist) dpldd(1, alpha=2, beta=3, theta=4) #> [1] 0.1766842 ppldd(1,alpha=2,beta=3,theta=4) #> [1] 0.9742603 qpldd(.8,alpha=2,beta=3,theta=4) #> [1] 0.6109249 rpldd(10,alpha=2,beta=3,theta=4) #>  [1]  0.07465832  0.63519411 -0.26720474  0.02963415  0.85982419  0.50119929 #>  [7]  0.29269408  0.62689209  0.76365143 -0.23498901"},{"path":"https://akmn35.github.io/new.dist/reference/sgrd.html","id":null,"dir":"Reference","previous_headings":"","what":"Slashed Generalized Rayleigh Distribution — sgrd","title":"Slashed Generalized Rayleigh Distribution — sgrd","text":"Density, distribution function, quantile function random generation Slashed generalized Rayleigh distribution parameters shape, scale kurtosis.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/sgrd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Slashed Generalized Rayleigh Distribution — sgrd","text":"","code":"dsgrd(x, theta, alpha, beta, log = FALSE)  psgrd(q, theta, alpha, beta, lower.tail = TRUE, log.p = FALSE)  qsgrd(p, theta, alpha, beta, lower.tail = TRUE)  rsgrd(n, theta, alpha, beta)"},{"path":"https://akmn35.github.io/new.dist/reference/sgrd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Slashed Generalized Rayleigh Distribution — sgrd","text":"x, q vector quantiles. theta scale parameter. alpha shape parameter. beta kurtosis parameter. log, log.p logical; TRUE, probabilities p given log(p). lower.tail logical; TRUE (default), probabilities \\(P\\left[ X\\leq x\\right]\\), otherwise, \\(P\\left[ X>x\\right] \\). p vector probabilities. n number observations. length(n) > 1, length taken number required.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/sgrd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Slashed Generalized Rayleigh Distribution — sgrd","text":"dsgrd gives density, psgrd gives distribution function, qsgrd gives quantile function rsgrd generates random deviates.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/sgrd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Slashed Generalized Rayleigh Distribution — sgrd","text":"Slashed Generalized Rayleigh distribution shape parameter \\(\\alpha\\), scale parameter \\(\\theta\\) kurtosis parameter \\(\\beta\\), density $$f\\left( x\\right) =\\frac{\\beta x^{-\\left( \\beta+1\\right)}}{\\Gamma \\left( \\alpha+1\\right) \\theta ^{\\beta/2}}\\Gamma \\left( \\frac{2\\alpha +\\beta +2}{2} \\right)F\\left( \\theta x^{2};\\frac{2\\alpha +\\beta +2}{2},1\\right), $$ F(.;,b) cdf Gamma (,b) distribution, $$x>0,~\\theta >0,~\\alpha >-1~~\\beta >0$$","code":""},{"path":"https://akmn35.github.io/new.dist/reference/sgrd.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Slashed Generalized Rayleigh Distribution — sgrd","text":"Iriarte, Y. ., Vilca, F., Varela, H. ve Gómez, H. W., 2017, Slashed generalized Rayleigh distribution, Communications Statistics- Theory Methods, 46 (10), 4686-4699.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/sgrd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Slashed Generalized Rayleigh Distribution — sgrd","text":"","code":"library(new.dist) dsgrd(2,theta=3,alpha=1,beta=4) #> [1] 0.08314235 psgrd(5,theta=3,alpha=1,beta=4) #> [1] 0.9989333 qsgrd(.4,theta=3,alpha=1,beta=4) #> [1] 0.8358487 rsgrd(10,theta=3,alpha=1,beta=4) #>  [1] 1.2385598 0.3031045 3.1956299 1.0580335 0.7449966 1.2809260 0.8571292 #>  [8] 2.5289716 0.3348913 2.4263656"},{"path":"https://akmn35.github.io/new.dist/reference/sod.html","id":null,"dir":"Reference","previous_headings":"","what":"Standard Omega Distribution — sod","title":"Standard Omega Distribution — sod","text":"Density, distribution function, quantile function random generation Standard Omega distribution.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/sod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standard Omega Distribution — sod","text":"","code":"dsod(x, alpha, beta, log = FALSE)  psod(q, alpha, beta, lower.tail = TRUE, log.p = FALSE)  qsod(p, alpha, beta, lower.tail = TRUE)  rsod(n, alpha, beta)"},{"path":"https://akmn35.github.io/new.dist/reference/sod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standard Omega Distribution — sod","text":"x, q vector quantiles. alpha, beta parameters. log, log.p logical; TRUE, probabilities p given log(p). lower.tail logical; TRUE (default), probabilities \\(P\\left[ X\\leq x\\right]\\), otherwise, \\(P\\left[ X>x\\right] \\). p vector probabilities. n number observations. length(n) > 1, length taken number required.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/sod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standard Omega Distribution — sod","text":"dsod gives density, psod gives distribution function, qsod gives quantile function rsod generates random deviates.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/sod.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Standard Omega Distribution — sod","text":"Standard Omega distribution parameters \\(\\alpha\\) \\(\\beta\\), density $$f\\left( x\\right) =\\alpha \\beta x^{\\beta -1}\\frac{1}{1-x^{2\\beta }} \\left( \\frac{1+x^{\\beta }}{1-x^{\\beta }}\\right) ^{-\\alpha /2},$$ $$0<x<1,~\\alpha ,\\beta >0.$$","code":""},{"path":"https://akmn35.github.io/new.dist/reference/sod.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Standard Omega Distribution — sod","text":"Birbiçer, İ. ve Genç, . İ., 2022, parameter estimation standard omega distribution. Journal Applied Statistics, 1-17.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/sod.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Standard Omega Distribution — sod","text":"","code":"library(new.dist) dsod(0.4, alpha=1, beta=2) #> [1] 0.6986559 psod(0.4, alpha=1, beta=2) #> [1] 0.1490371 qsod(.8, alpha=1, beta=2) #> [1] 0.9607689 rsod(10, alpha=1, beta=2) #>  [1] 0.9882847 0.8667206 0.8243898 0.9842257 0.3480448 0.9916130 0.5037048 #>  [8] 0.9812416 0.5392358 0.9328354"},{"path":"https://akmn35.github.io/new.dist/reference/tpmd.html","id":null,"dir":"Reference","previous_headings":"","what":"Power Muth Distribution — tpmd","title":"Power Muth Distribution — tpmd","text":"Density, distribution function, quantile function random generation Power Muth distribution parameters shape scale.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/tpmd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Power Muth Distribution — tpmd","text":"","code":"dtpmd(x, beta = 1, alpha, log = FALSE)  ptpmd(q, beta = 1, alpha, lower.tail = TRUE, log.p = FALSE)  qtpmd(p, beta = 1, alpha, lower.tail = TRUE)  rtpmd(n, beta = 1, alpha)"},{"path":"https://akmn35.github.io/new.dist/reference/tpmd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Power Muth Distribution — tpmd","text":"x, q vector quantiles. beta scale parameter. alpha shape parameter. log, log.p logical; TRUE, probabilities p given log(p). lower.tail logical; TRUE (default), probabilities \\(P\\left[ X\\leq x\\right]\\), otherwise, \\(P\\left[ X>x\\right] \\). p vector probabilities. n number observations. length(n) > 1, length taken number required.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/tpmd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Power Muth Distribution — tpmd","text":"dtpmd gives density, ptpmd gives distribution function, qtpmd gives quantile function rtpmd generates random deviates.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/tpmd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Power Muth Distribution — tpmd","text":"Power Muth distribution shape parameter \\(\\alpha\\) scale parameter \\(\\beta\\) density $$f\\left( x\\right) =\\frac{\\alpha }{\\beta ^\\alpha }x^{\\alpha -1} \\left( e^{\\left(x/\\beta \\right) ^{\\alpha }}-1\\right) \\left( e^{\\left( x/\\beta \\right)  ^{\\alpha }- \\left( e^{\\left( x/\\beta \\right) ^{\\alpha }}-1\\right) }\\right), $$ $$x>0,~\\alpha ,\\beta>0.$$","code":""},{"path":"https://akmn35.github.io/new.dist/reference/tpmd.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Power Muth Distribution — tpmd","text":"Hazard function; $$h\\left( \\beta ,\\alpha \\right) =\\frac{\\alpha }{\\beta ^{\\alpha }} \\left(e^{\\left( x/\\beta \\right) ^{\\alpha }}-1\\right) x^{\\alpha -1}$$","code":""},{"path":"https://akmn35.github.io/new.dist/reference/tpmd.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Power Muth Distribution — tpmd","text":"Jodra, P., Gomez, H. W., Jimenez-Gamero, M. D., & Alba-Fernandez, M. V. (2017). power Muth distribution . Mathematical Modelling Analysis, 22(2), 186-201.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/tpmd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Power Muth Distribution — tpmd","text":"","code":"library(new.dist) dtpmd(1, beta=2, alpha=3) #> [1] 0.04952547 ptpmd(1,beta=2,alpha=3) #> [1] 0.008115344 qtpmd(.5,beta=2,alpha=3) #> [1] 1.990084 rtpmd(10,beta=2,alpha=3) #>  [1] 1.9434916 2.4938346 2.0588805 2.2294548 1.9435930 1.9944897 0.9324897 #>  [8] 2.0759428 2.0621260 2.1702885"},{"path":"https://akmn35.github.io/new.dist/reference/tprd.html","id":null,"dir":"Reference","previous_headings":"","what":"Two-Parameter Rayleigh Distribution — tprd","title":"Two-Parameter Rayleigh Distribution — tprd","text":"Density, distribution function, quantile function random generation Two-Parameter Rayleigh  distribution parameters location scale.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/tprd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Two-Parameter Rayleigh Distribution — tprd","text":"","code":"dtprd(x, lambda = 1, mu, log = FALSE)  ptprd(q, lambda = 1, mu, lower.tail = TRUE, log.p = FALSE)  qtprd(p, lambda = 1, mu, lower.tail = TRUE)  rtprd(n, lambda = 1, mu)"},{"path":"https://akmn35.github.io/new.dist/reference/tprd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Two-Parameter Rayleigh Distribution — tprd","text":"x, q vector quantiles. lambda scale parameter. mu location parameter. log, log.p logical; TRUE, probabilities p given log(p). lower.tail logical; TRUE (default), probabilities \\(P\\left[ X\\leq x\\right]\\), otherwise, \\(P\\left[ X>x\\right] \\). p vector probabilities. n number observations. length(n) > 1, length taken number required.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/tprd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Two-Parameter Rayleigh Distribution — tprd","text":"dtprd gives density, ptprd gives distribution function, qtprd gives quantile function rtprd generates random deviates.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/tprd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Two-Parameter Rayleigh Distribution — tprd","text":"Two-Parameter Rayleigh distribution scale parameter \\(\\lambda\\) location parameter \\(\\mu\\), density $$f\\left( x\\right) =2\\lambda \\left( x-\\mu \\right) e^{-\\lambda  \\left( x-\\mu\\right) ^{2}},$$ $$x>\\mu ,~\\lambda >0.$$","code":""},{"path":"https://akmn35.github.io/new.dist/reference/tprd.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Two-Parameter Rayleigh Distribution — tprd","text":"Dey, S., Dey, T. ve Kundu, D., 2014, Two-parameter Rayleigh distribution: different methods estimation, American Journal Mathematical Management Sciences, 33 (1), 55-74.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/tprd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Two-Parameter Rayleigh Distribution — tprd","text":"","code":"library(new.dist) dtprd(5, lambda=4, mu=4) #> [1] 0.1465251 ptprd(2,lambda=2,mu=1) #> [1] 0.8646647 qtprd(.5,lambda=2,mu=1) #> [1] 1.588705 rtprd(10,lambda=2,mu=1) #>  [1] 1.467798 2.068839 2.538830 1.414083 1.837593 1.448918 2.025241 1.602008 #>  [9] 1.057936 1.709099"},{"path":"https://akmn35.github.io/new.dist/reference/ugd.html","id":null,"dir":"Reference","previous_headings":"","what":"Uniform-Geometric Distribution — ugd","title":"Uniform-Geometric Distribution — ugd","text":"Density, distribution function, quantile function random generation Uniform-Geometric distribution.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/ugd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Uniform-Geometric Distribution — ugd","text":"","code":"dugd(x, theta, log = FALSE)  pugd(q, theta, lower.tail = TRUE, log.p = FALSE)  qugd(p, theta, lower.tail = TRUE)  rugd(n, theta)"},{"path":"https://akmn35.github.io/new.dist/reference/ugd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Uniform-Geometric Distribution — ugd","text":"x, q vector quantiles. theta parameter. log, log.p logical; TRUE, probabilities p given log(p). lower.tail logical; TRUE (default), probabilities \\(P\\left[ X\\leq x\\right]\\), otherwise, \\(P\\left[ X>x\\right] \\). p vector probabilities. n number observations. length(n) > 1, length taken number required.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/ugd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Uniform-Geometric Distribution — ugd","text":"dugd gives density, pugd gives distribution function, qugd gives quantile function rugd generates random deviates.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/ugd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Uniform-Geometric Distribution — ugd","text":"Uniform-Geometric distribution shape parameter \\(\\theta\\), density $$f\\left( x\\right) =\\theta \\left( 1-\\theta \\right) ^{x-1}LerchPhi \\left[ \\left(1-\\theta \\right) ,1,x\\right],$$ $$LerchPhi\\left( z,,v\\right) =\\sum_{n=0}^{\\infty }\\frac{z^{n}} {\\left(v+n\\right) ^{}}$$ $$x=1,2,...~,~~0<\\theta <1.$$","code":""},{"path":"https://akmn35.github.io/new.dist/reference/ugd.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Uniform-Geometric Distribution — ugd","text":"Akdoğan, Y., Kuş, C., Asgharzadeh, ., Kınacı, İ., & Sharafi, F. (2016). Uniform-geometric distribution. Journal Statistical Computation Simulation, 86(9), 1754-1770.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/ugd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Uniform-Geometric Distribution — ugd","text":"","code":"library(new.dist) dugd(1, theta=0.5) #> [1] 0.6931472 pugd(1,theta=.5) #> [1] 0.6931472 qugd(0.6,theta=.1) #> [1] 4 rugd(10,theta=.1) #>  [1] 17  3 24  2  8  2  1  5 14  1"},{"path":"https://akmn35.github.io/new.dist/reference/uigd.html","id":null,"dir":"Reference","previous_headings":"","what":"Unit Inverse Gaussian Distribution — uigd","title":"Unit Inverse Gaussian Distribution — uigd","text":"Density, distribution function, quantile function random generation Unit Inverse Gaussian distribution mean scale.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/uigd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unit Inverse Gaussian Distribution — uigd","text":"","code":"duigd(x, mu, lambda = 1, log = FALSE)  puigd(q, mu, lambda = 1, lower.tail = TRUE, log.p = FALSE)  quigd(p, mu, lambda = 1, lower.tail = TRUE)  ruigd(n, mu, lambda = 1)"},{"path":"https://akmn35.github.io/new.dist/reference/uigd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unit Inverse Gaussian Distribution — uigd","text":"x, q vector quantiles. mu mean parameter. lambda scale parameter. log, log.p logical; TRUE, probabilities p given log(p). lower.tail logical; TRUE (default), probabilities \\(P\\left[ X\\leq x\\right]\\), otherwise, \\(P\\left[ X>x\\right] \\). p vector probabilities. n number observations. length(n) > 1, length taken number required.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/uigd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unit Inverse Gaussian Distribution — uigd","text":"duigd gives density, puigd gives distribution function, quigd gives quantile function ruigd generates random deviates.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/uigd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Unit Inverse Gaussian Distribution — uigd","text":"Unit Inverse Gaussian distribution scale parameter \\(\\lambda\\) mean parameter \\(\\mu\\), density $$f\\left( x\\right) =\\sqrt{\\frac{\\lambda }{2\\pi }} \\frac{1}{x^{3/2}}e^{-\\frac{ \\lambda }{2\\mu ^{2}x}\\left( x-\\mu \\right) ^{2}},$$ $$x>0,~\\mu ,\\lambda >0.$$","code":""},{"path":"https://akmn35.github.io/new.dist/reference/uigd.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Unit Inverse Gaussian Distribution — uigd","text":"Ghitany, M., Mazucheli, J., Menezes, . ve Alqallaf, F., 2019, unit-inverse Gaussian distribution: new alternative two-parameter distributions unit interval, Communications Statistics-Theory Methods, 48 (14), 3423-3438.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/uigd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Unit Inverse Gaussian Distribution — uigd","text":"","code":"library(new.dist) duigd(1, mu=2, lambda=3) #> [1] 0.4749088 puigd(1,mu=2,lambda=3) #> [1] 0.2873867 quigd(.1,mu=2,lambda=3) #> [1] 0.6104128 ruigd(10,mu=2,lambda=3) #>  [1] 1.4415102 0.9431021 3.8529535 1.7603402 1.4886917 1.4230646 3.2873628 #>  [8] 0.7187954 1.5074736 4.4022024"},{"path":"https://akmn35.github.io/new.dist/reference/wgd.html","id":null,"dir":"Reference","previous_headings":"","what":"Weighted Geometric Distribution — wgd","title":"Weighted Geometric Distribution — wgd","text":"Density, distribution function, quantile function random generation Weighted Geometric distribution.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/wgd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Weighted Geometric Distribution — wgd","text":"","code":"dwgd(x, alpha, lambda, log = FALSE)  pwgd(q, alpha, lambda, lower.tail = TRUE, log.p = FALSE)  qwgd(p, alpha, lambda, lower.tail = TRUE)  rwgd(n, alpha, lambda)"},{"path":"https://akmn35.github.io/new.dist/reference/wgd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Weighted Geometric Distribution — wgd","text":"x, q vector quantiles. alpha, lambda parameters. log, log.p logical; TRUE, probabilities p given log(p). lower.tail logical; TRUE (default), probabilities \\(P\\left[ X\\leq x\\right]\\), otherwise, \\(P\\left[ X>x\\right] \\). p vector probabilities. n number observations. length(n) > 1, length taken number required.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/wgd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Weighted Geometric Distribution — wgd","text":"dwgd gives density, pwgd gives distribution function, qwgd gives quantile function rwgd generates random deviates.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/wgd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Weighted Geometric Distribution — wgd","text":"Weighted Geometric distribution parameters \\(\\alpha\\) \\(\\lambda\\), density $$f\\left( x\\right) =\\frac{\\left( 1-\\alpha \\right) \\left( 1-\\alpha ^{\\lambda+1}\\right) }{1-\\alpha ^{\\lambda }}\\alpha ^{x-1} \\left( 1-\\alpha ^{\\lambda x}\\right),$$ $$x\\\\mathbb {N} =1,2,...~,~\\lambda >0~~0<\\alpha <1.$$","code":""},{"path":"https://akmn35.github.io/new.dist/reference/wgd.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Weighted Geometric Distribution — wgd","text":"Najarzadegan, H., Alamatsaz, M. H., Kazemi, . ve Kundu, D., 2020, Weighted bivariate geometric distribution: Simulation estimation, Communications Statistics-Simulation Computation, 49 (9), 2419-2443.","code":""},{"path":"https://akmn35.github.io/new.dist/reference/wgd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Weighted Geometric Distribution — wgd","text":"","code":"library(new.dist) dwgd(1,alpha=.2,lambda=3) #> [1] 0.79872 pwgd(1,alpha=.2,lambda=3) #> [1] 0.79872 qwgd(.98,alpha=.2,lambda=3) #> [1] 3 rwgd(10,alpha=.2,lambda=3) #>  [1] 1 1 1 2 1 1 1 1 2 1"},{"path":"https://akmn35.github.io/new.dist/news/index.html","id":"newdist-010","dir":"Changelog","previous_headings":"","what":"new.dist 0.1.0","title":"new.dist 0.1.0","text":"CRAN release: 2023-11-07 First public release.","code":""}]
